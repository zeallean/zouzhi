<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>走之网</title>
  <subtitle>Just walking and you will eventually arrive.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zouzhi.net/"/>
  <updated>2016-11-12T19:38:49.935Z</updated>
  <id>http://zouzhi.net/</id>
  
  <author>
    <name>Zeallean</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://zouzhi.net/posts/uncategorized/2016-11-12-document-style-guide.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2016-11-12-document-style-guide.html</id>
    <published>2016-11-12T19:38:49.935Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>中文技术文档的写作规范</p>
<p>很多人说，不知道怎么写文档，都是凭着感觉写。</p>
<p>网上也很少有资料，教你写文档。这已经影响了中文软件的发展。</p>
<p>英语世界里，文档非常受重视，许多公司和组织都有自己的文档规范，清楚地规定写作要求，比如微软、MailChimp、Apple、Yahoo、docker、Struts 等等（维基百科有一份完整的清单）。中文的也有不少，但都不令人满意，要么太简单，要么不太适用。</p>
<p>我就动手，参考上面的规范，也结合自己的实践，总结了一份简单的《中文技术文档的写作规范》。</p>
<ol>
<li><a href="https://github.com/ruanyf/document-style-guide/blob/master/docs/title.md" target="_blank" rel="external">标题</a></li>
<li><a href="https://github.com/ruanyf/document-style-guide/blob/master/docs/text.md" target="_blank" rel="external">文本</a></li>
<li><a href="https://github.com/ruanyf/document-style-guide/blob/master/docs/paragraph.md" target="_blank" rel="external">段落</a></li>
<li><a href="https://github.com/ruanyf/document-style-guide/blob/master/docs/number.md" target="_blank" rel="external">数值</a></li>
<li><a href="https://github.com/ruanyf/document-style-guide/blob/master/docs/marks.md" target="_blank" rel="external">标点符号</a></li>
<li><a href="https://github.com/ruanyf/document-style-guide/blob/master/docs/structure.md" target="_blank" rel="external">章节结构</a></li>
</ol>
<p>我希望，这样可以抛砖引玉，让更多人重视文档，进而真正出现大家普遍接受的文档规范。</p>
<p>下面是关于写作风格的一个片段。欢迎提交 Issue 和 PR 补充。</p>
<p>=================================</p>
<h2 id="写作风格"><a href="#写作风格" class="headerlink" title="写作风格"></a>写作风格</h2><p>（摘自《中文技术文档的写作规范》）</p>
<p>如果使用了被动语态，应考虑更改为主动语态。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：假如此软件尚未被安装，</div><div class="line"></div><div class="line">正确：假如尚未安装这个软件，</div></pre></td></tr></table></figure>
<p>不使用非正式的语言风格。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！</div><div class="line"></div><div class="line">正确：无法参加本次活动，我深感遗憾。</div></pre></td></tr></table></figure>
<p>用对”的”、”地”、”得”。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">她露出了开心的笑容。</div><div class="line">（形容词＋的＋名词）</div><div class="line"></div><div class="line">她开心地笑了。</div><div class="line">（副词＋地＋动词）</div><div class="line"></div><div class="line">她笑得很开心。</div><div class="line">（动词＋得＋副词）</div></pre></td></tr></table></figure>
<p>使用代词时（比如”其”、”该”、”此”、”这”等词），必须明确指代的内容，保证只有一个含义。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。</div><div class="line"></div><div class="line">正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。</div></pre></td></tr></table></figure>
<p>名词前不要使用过多的形式词。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。</div><div class="line"></div><div class="line">正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。</div></pre></td></tr></table></figure>
<p>句子的长度尽量保持在20个字以内；20～29个字的句子，可以接受；39～39个字的句子，语义必须明确，才能接受；多于40个字的句子，在任何情况下都不能接受。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。</div><div class="line"></div><div class="line">正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。</div></pre></td></tr></table></figure>
<p>同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：请确认没有接通装置的电源。</div><div class="line"></div><div class="line">正确：请确认装置的电源已关闭。</div></pre></td></tr></table></figure>
<p>避免使用双重否定句。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">错误：没有删除权限的用户，不能删除此文件。</div><div class="line"></div><div class="line">正确：用户必须拥有删除权限，才能删除此文件。</div></pre></td></tr></table></figure>
<p>（正文完）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;中文技术文档的写作规范&lt;/p&gt;
&lt;p&gt;很多人说，不知道怎么写文档，都是凭着感觉写。&lt;/p&gt;
&lt;p&gt;网上也很少有资料，教你写文档。这已经影响了中文软件的发展。&lt;/p&gt;
&lt;p&gt;英语世界里，文档非常受重视，许多公司和组织都有自己的文档规范，清楚地规定写作要求，比如微软、MailC
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>(转)在Android5.1(Genymotion)下安装xposed</title>
    <link href="http://zouzhi.net/posts/programming/2016-03-28-install-xposed-in-genymotion-andriod.html"/>
    <id>http://zouzhi.net/posts/programming/2016-03-28-install-xposed-in-genymotion-andriod.html</id>
    <published>2016-03-28T03:37:30.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>MacOS<br>Genymotion<br>Android5.1.0-api22</p>
<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>下载<a href="http://repo.xposed.info/module/de.robv.android.xposed.installer" target="_blank" rel="external">安装包</a>,一个installer,一个SDK,注意选择正确的版本<br>安装<a href="https://github.com/rovo89/GenyFlash" target="_blank" rel="external">GenyFlash</a>,按这里所说,Genymotion在拖放flashing ZIP时,只是简单地复制文件到system目录下.GenyFlash做了一些权限提升的工作.经过多次尝试,同样的安装Xposed过程,有GenyFlash确实会成功.<br>Genymotion支持拖放安装,先装installer,再装SDK,完了之后<em>软启动</em>(Xposed-&gt;Framework),基本就OK了</p>
<h1 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h1><p>建立一个Android工程<br><code>/assets/xposed_init</code>文件指定了module的入口类,注意是<code>assets</code>不是<code>asserts</code>(踩这种坑也是醉了),如:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">com.vkyii.helloxposed.HookHello</div></pre></td></tr></table></figure>
<p>AndroidMannifest.xml内容:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">package</span>=<span class="string">"com.vkyii.helloxposed"</span>&gt;</div><div class="line">	</div><div class="line">    <span class="tag">&lt;<span class="name">application</span> <span class="attr">android:allowBackup</span>=<span class="string">"true"</span> <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span> <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"xposedmodule"</span></div><div class="line">            <span class="attr">android:value</span>=<span class="string">"true"</span>/&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"xposeddescription"</span></div><div class="line">            <span class="attr">android:value</span>=<span class="string">"Xposed模块示例"</span>/&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">            <span class="attr">android:name</span>=<span class="string">"xposedminversion"</span></div><div class="line">            <span class="attr">android:value</span>=<span class="string">"73"</span>/&gt;<span class="comment">&lt;!-- 对应的XposedBridge版本号 --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure>
<p>依赖XposedBridge.jar于build.gradle</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function">provided <span class="title">files</span><span class="params">(<span class="string">'libs/XposedBridgeApi-20150213.jar'</span>)</span></span></div></pre></td></tr></table></figure>
<p>简单的hook代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.vkyii.helloxposed;</div><div class="line"></div><div class="line"> <span class="keyword">import</span> de.robv.android.xposed.IXposedHookLoadPackage;</div><div class="line"> <span class="keyword">import</span> de.robv.android.xposed.XposedBridge;</div><div class="line"> <span class="keyword">import</span> de.robv.android.xposed.callbacks.XC_LoadPackage;</div><div class="line"></div><div class="line"> <span class="comment">/**</span></div><div class="line">  * Created by linbo on 15/9/10.</div><div class="line">  */</div><div class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HookHello</span> <span class="keyword">implements</span> <span class="title">IXposedHookLoadPackage</span> </span>&#123;</div><div class="line">     <span class="meta">@Override</span></div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleLoadPackage</span><span class="params">(XC_LoadPackage.LoadPackageParam loadPackageParam)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">         XposedBridge.log(<span class="string">"handleLoadPackage"</span>);</div><div class="line"></div><div class="line">         <span class="comment">//只hook测试app</span></div><div class="line">         <span class="keyword">if</span> (loadPackageParam.packageName.equals(<span class="string">"com.vkyii.hello"</span>)) &#123;</div><div class="line">             XposedBridge.log(<span class="string">"hit"</span>);</div><div class="line">         &#125;</div><div class="line">     &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>安装完之后,在XposedInstaller的Module下应该可以看到模块了,勾选上,重启,日志输出正确的话就成功了</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://my.oschina.net/wisedream/blog/471292" target="_blank" rel="external">Android hook框架入门</a><br><a href="http://www.droidsec.cn/android-hook%E6%A1%86%E6%9E%B6xposed%E7%AF%87/" target="_blank" rel="external">Android.Hook框架Xposed篇</a></p>
<hr>
<p>PS: 本文转载自<a href="http://www.vkyii.com/2015/09/09/install-xposed-in-genymotion-android.html" target="_blank" rel="external">在Android5.1(Genymotion)下安装xposed</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;MacOS&lt;br&gt;Genymotion&lt;br&gt;Android5.1.0-api22&lt;/p&gt;
&lt;h1 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程
    
    </summary>
    
      <category term="编程" scheme="http://zouzhi.net/categories/programming/"/>
    
    
      <category term="xposed install" scheme="http://zouzhi.net/tags/xposed-install/"/>
    
      <category term="genymotion" scheme="http://zouzhi.net/tags/genymotion/"/>
    
      <category term="andriod" scheme="http://zouzhi.net/tags/andriod/"/>
    
      <category term="virtual box" scheme="http://zouzhi.net/tags/virtual-box/"/>
    
  </entry>
  
  <entry>
    <title>（转）mac os x wireshark no interfaces found fix</title>
    <link href="http://zouzhi.net/posts/uncategorized/2016-03-28-mac-os-x-wireshark-no-interfaces-found-fix.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2016-03-28-mac-os-x-wireshark-no-interfaces-found-fix.html</id>
    <published>2016-03-28T01:25:49.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>Alright, quick fix for a problem I always forget. When running Wireshark on OS X, when I go to select an interface to capture on, I get an error telling me there are no available interfaces to capture on. This is because Wireshark is running as a user that doesn’t have ownership on these interfaces.</p>
<p>Solution, open up the terminal and run the command:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chown &lt;username&gt; /dev/bpf*</div></pre></td></tr></table></figure>
<p>After a reboot, these permissions get reset, so you need to do it after each reset (and hence why I need this every now and then but can never remember the command).</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Alright, quick fix for a problem I always forget. When running Wireshark on OS X, when I go to select an interface to capture on, I get a
    
    </summary>
    
    
      <category term="wireshark" scheme="http://zouzhi.net/tags/wireshark/"/>
    
      <category term="network" scheme="http://zouzhi.net/tags/network/"/>
    
      <category term="capture" scheme="http://zouzhi.net/tags/capture/"/>
    
      <category term="osx" scheme="http://zouzhi.net/tags/osx/"/>
    
  </entry>
  
  <entry>
    <title>《增长黑客》阅读笔记</title>
    <link href="http://zouzhi.net/posts/%E9%98%85%E8%AF%BB/2015-09-18-Growth-Hacker-Reading-Record.html"/>
    <id>http://zouzhi.net/posts/阅读/2015-09-18-Growth-Hacker-Reading-Record.html</id>
    <published>2015-09-18T14:47:00.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>晚上临睡前在Podcast 的首页推荐中看到一个叫做“狗熊有话说”的频道。科幻题材的关键词和背景图吸引了我（从这里来看，主持人对于“growth hacker”也是比较有见地的）。随意点进去，最新一期的播客是关于“如何做一名增长黑客？- How to become a growth hacker”。增长黑客？第一次听到这个词。对于这种搞概念的东西，第一印象将之划入“Big Data，Cloud Computer”之流。还好，没听过的概念还是要了解下的，随意的听了下。原来是来给新书做推广的！《增长黑客》听上去挺西方化的一本书，原以为是译作。仔细听下去发现作者原来是一个正儿八经的中国哥们。而且还是一个 Coder。听声音和说话的感觉估计还是个85后甚至90后。抱着这样的一份好奇，继续听下去，虽然对话通篇都是主持人对于作者的一种45度角姿态，不过分享的一些个人经历还是挺有趣的。言语中透着青涩和那种年青人的轻狂。正是我们这个年纪的一种良好状态。</p>
<p>再听下去，原来作者已经开始在北京创业了！这个卖书的行为已经远非稿费之意了。这个名叫范冰的哥们果然是个典型。对于新鲜事物的好奇程度和个人执行力，让我嗅到了同类的气息，同时也感到一种相形见拙的自卑。对话后面的内容没有听完，遂直接去搜索此书。作者挺用心的为该书建立了独立网站。针对电子书爱好者，比如我。已经同步上线了 Kindle，Duokan，豆瓣等等线上书店的电子书版本。更多怀着一种去学习写作和执行，反而对书目本身内容干货没有太多期待的心态。我开始了从书架上点开它。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;晚上临睡前在Podcast 的首页推荐中看到一个叫做“狗熊有话说”的频道。科幻题材的关键词和背景图吸引了我（从这里来看，主持人对于“growth hacker”也是比较有见地的）。随意点进去，最新一期的播客是关于“如何做一名增长黑客？- How to become a gr
    
    </summary>
    
      <category term="阅读" scheme="http://zouzhi.net/categories/%E9%98%85%E8%AF%BB/"/>
    
    
      <category term="growth hacker" scheme="http://zouzhi.net/tags/growth-hacker/"/>
    
      <category term="增长黑客" scheme="http://zouzhi.net/tags/%E5%A2%9E%E9%95%BF%E9%BB%91%E5%AE%A2/"/>
    
      <category term="AARRR" scheme="http://zouzhi.net/tags/AARRR/"/>
    
  </entry>
  
  <entry>
    <title>Travis-ci,Hexo与Github三剑合璧打造专属静态博客</title>
    <link href="http://zouzhi.net/posts/programming/2015-09-13-Build-My-Static-Blog-Site-With-Travis-CI-And-Hexo.html"/>
    <id>http://zouzhi.net/posts/programming/2015-09-13-Build-My-Static-Blog-Site-With-Travis-CI-And-Hexo.html</id>
    <published>2015-09-13T23:56:38.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>本篇主要针对喜欢写写文字，但又不想受限于千篇一律的博客平台，想寻求一个没有广告，简洁纯净，可以完全按自己的方式来写作的文字爱好者。当然如果有点 geek 范，爱好编程则再好不过了。当然，如果觉得操作过于繁琐难懂，但仍想拥有一个同本站一般的博客，可以文章下面<a href="#comment">留言</a>、<a href="mailto:zeallean5@gmail.com" target="_blank" rel="external">邮箱</a>或者微博<a href="http://weibo.com/crazybd" target="_blank" rel="external">@走之派-zeal</a>私信我。很乐意与各位一起探讨，并免费提供帮助（可以的话）。同时也欢迎各位加入Facebook小组– Free Code Camp Changsha 。大家一起来自由学习编程，与全球的编程爱好者做全球性的公益项目。</p>
<h2 id="工具简介"><a href="#工具简介" class="headerlink" title="工具简介"></a>工具简介</h2><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p><a href="https://hexo.io" target="_blank" rel="external">Hexo</a> 是由台湾个人团队基于 Node JS 开发的一个快速、简洁且高效的博客框架。完全开源，源代码托管在 Github 上。安装后，通过其简单的命令就可以在本地快速的搭建起一个个人博客。官网上提供的文档全面且易阅读，非常容易上手。</p>
<h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p><a href="https://github.com" target="_blank" rel="external">Github</a> 对于经常通过 Google 找轮子的读者应该都比较熟悉它，程序员或多或少都在 Github 上借鉴，搬运，共享过开源代码。应该是全球最火，也是注册人数最多的一个开发者平台。基于强大的分布式版本控制系统 git。以及强大的多人协作工作流。各大互联网公司，也都开始纷纷效仿学习 github 的协作开发模式了。基于 Github的开发工作流，很值得深入学习，相信对于开发团队的流程管理会有很大的帮助（完全从本人的开发经历有感而发）。</p>
<p>好了，上面就是我们搭建静态博客要用到的几个主要工具的简单介绍。对于从来没接触和听说过的朋友，可能有点不知所云。不过不要紧，因为每一个深挖学习都可以写出一个系列来！（那在这里为什么还要写？其实你懂的，为了让文章结构看上去更为严谨。我这就是想装下13）其实他们各自的官网都提供了非常详细的文档说明（如果你英文好，而且会科学上网）</p>
<h3 id="travis-ci"><a href="#travis-ci" class="headerlink" title="travis-ci"></a>travis-ci</h3><p><a href="https://travis.org" target="_blank" rel="external">Travis-CI</a> 是一个面向 Github 上的开发者(travis-ci.org 主要针对开源项目)提供的一个符合<a href="https://zh.wikipedia.org/wiki/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91" target="_blank" rel="external">敏捷开发模式</a>的<a href="https://zh.wikipedia.org/wiki/%E6%8C%81%E7%BA%8C%E6%95%B4%E5%90%88" target="_blank" rel="external">持续化集成</a>Saas 平台。</p>
<blockquote>
<p>在持续集成中要求将所有工程师对于软件的工作复本，每天整合数次到共用主线（mainline）上。</p>
<p>– 摘自维基百科</p>
</blockquote>
<p>有关 CI 的介绍，请自行 google 。下面也会针对本站点的代码部署做一个简单的CI流程介绍。你会发现 CI 确实为开发者在敏捷开发工作中对于快速提交，测试，及时集成的一系列工作提供了极大的便利。</p>
<p>不过目前貌似 Travis 针对墙内用户已经做了限制。无梯无法正常访问进行注册。这无疑也给很多尝鲜者设置了一道门槛！</p>
<p><strong>不是我要故意挖坑！提醒：本篇文章的部分操作实现基于一个前提 – 你会科学上网。关于如何布梯子进行科学上网。可以私信也可以自己</strong> <del>baidu</del> / <strong>google</strong> <code>goagent</code>，<code>shadowsocks</code></p>
<h2 id="基础准备"><a href="#基础准备" class="headerlink" title="基础准备"></a>基础准备</h2><h3 id="帐号注册"><a href="#帐号注册" class="headerlink" title="帐号注册"></a>帐号注册</h3><ol>
<li><p>Github 注册：首先强烈推荐各位成为 Github 上成员（绝对不是广告）。不管是程序员，设计师，文字工作者，whatever··· 通过 Github 的正确使用和对 git 的正确操作，相信对于你的文件管理，代码控制或者是开拓视野都会大受裨益。<br>注册入口：<a href="https://github.com/join" target="_blank" rel="external">github.com</a>，具体流程这里不做过多介绍。</p>
</li>
<li><p>Travis-Ci 注册：注册完 Github 帐号，通过科学上网方式访问<a href="https://travis.org" target="_blank" rel="external">travis-ci.org</a>完成注册。注册会要求绑定 Github 帐号。所以必须先完成上一步的注册。</p>
</li>
</ol>
<h3 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h3><ol>
<li><p>git 的安装：不多叨叨，直接到 git 的官网<a href="https://git-scm.com" target="_blank" rel="external">git-scm.com</a>下载与自己的系统相应的版本进行安装。有问题直接留言！使用说明推荐一个 <a href="http://www.bootcss.com/p/git-guide/" target="_blank" rel="external">git-简洁指南</a></p>
</li>
<li><p>node-js 的安装：近年新推出的开发工具。直接官网下载进行安装 <a href="https://nodejs.org" target="_blank" rel="external">nodejs.org</a>。有问题，来留言！</p>
</li>
<li><p>hexo 的安装：hexo 的官网 <a href="https://hexo.io" target="_blank" rel="external">hexo.io</a> 有介绍，很简单：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g    <span class="comment"># 安装 hexo</span></div></pre></td></tr></table></figure>
<p> <strong>说明：</strong>由于 node 的包管理工具<code>npm</code>  默认采用的源在国内访问受限，so，这里安装可能会卡壳和报错。不过还好 network   是世界的。只需通过 <a href="http://npm.taobao.org/" target="_blank" rel="external">npm 国内镜像</a> 将源换成淘宝npm镜像，问题可轻松解决。</p>
<p> 关于 hexo 的操作和介绍，参见<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">官方文档</a>，非常详细，中文支持良好。</p>
</li>
<li><p>ruby 的安装：类似 Nodejs 的另一门开发工具。直接官网下载安装<a href="https://www.ruby-lang.org/zh_cn/" target="_blank" rel="external">ruby-lang.org</a>。它主要作为后面的 travis 工具集的安装提供平台支持。</p>
</li>
</ol>
<p>到这里基础环境已经准备完毕，看上去不简单。但能进行到这里，相信你有足够的兴趣继续下去。好了，休息下。先来听首歌！</p>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="80" src="http://music.163.com/outchain/player?type=2&id=34248258&auto=0&height=66"></iframe>

<hr>
<p>继续！</p>
<p>下面我想通过一张流程图来简要的介绍下静态博客搭建所用到的各个工具之间的联系！<br><img src="http://7xl4wx.com1.z0.glb.clouddn.com/static/images/post/work-flow.png" alt="work-flow"></p>
<p>针对流程图，搭建过程可分为三大部分。</p>
<p><strong>注意：接下来的操作介绍都建立在上面的环境正常安装的前提下</strong></p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="一、本地静态博客搭建"><a href="#一、本地静态博客搭建" class="headerlink" title="一、本地静态博客搭建"></a>一、本地静态博客搭建</h3><p>前面已经介绍了，Hexo 是一个用来快速构建本地静态博客的工具。打开终端，通过如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo init <span class="string">"My site"</span>          <span class="comment"># 初始化项目，“my site”为自定义项目名</span></div><div class="line">$ <span class="built_in">cd</span> <span class="string">"My site"</span></div><div class="line">$ npm install                <span class="comment"># 安装依赖</span></div><div class="line">$ hexo server                <span class="comment"># 生成静态文件, 启动本地web服务器</span></div></pre></td></tr></table></figure></p>
<p>便可以在本地构建一个静态博客。相关的Hexo 的操作，前面已经给出链接：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官方文档</a>。此时创建的博客和内容都只存在与本地。需要想其他博客平台可以通过独立的域名线上访问，我们需要借助 Github。</p>
<h3 id="二、将项目托管至-Github"><a href="#二、将项目托管至-Github" class="headerlink" title="二、将项目托管至 Github"></a>二、将项目托管至 Github</h3><h4 id="文件托管"><a href="#文件托管" class="headerlink" title="文件托管"></a>文件托管</h4><p>首先需要在 Github 上创建一个 repo。<br><img src="http://7xl4wx.com1.z0.glb.clouddn.com/static/images/post/repo-create.png" alt="git-repo"></p>
<p>为了避免接下来的操作报错。在创建 repo 时，初始化不要添加 <code>README</code> 和 <code>.gitignore</code> 文件.<br><img src="http://7xl4wx.com1.z0.glb.clouddn.com/static/images/post/repo-initialize.png" alt="initialize"></p>
<p>github 上 repo 新建好以后。回到本机，通过终端，进入刚才通过 hexo  创建好的项目目录，通过 git 进行托管。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> mysite  <span class="comment"># 进入项目目录</span></div><div class="line">$ git init   <span class="comment"># git 初始化</span></div></pre></td></tr></table></figure>
<p>将所有文件通过 git 进行本地版本控制，保存至 stage 区<br>（使用过 SVN 的，这里 Git 在设计上与 SVN 相比多了一个暂存区，它是介于工作区和版本库之间，关于 git 的原理和使用可以查看 <a href="https://git-scm.com/doc" target="_blank" rel="external">git-scm 上的手册</a>）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add .</div></pre></td></tr></table></figure>
<p>将所有缓存区的文件提交至版本库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m <span class="string">"Site init"</span></div></pre></td></tr></table></figure></p>
<p>提交完毕后，回到 github 上来。进入对应的 repo 页面。点击 <i class="icon-clippy"></i> 复制其对应的 repo url 地址</p>
<p><img src="http://7xl4wx.com1.z0.glb.clouddn.com/static/images/post/copy-remote-repository-url.png" alt="repo-url"></p>
<p>再次回到终端，将刚才复制的 URL 设置为当前项目资源的中心仓库地址。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git remote add origin “repo url” <span class="comment"># 设置中心仓库地址，“repo-url” 为复制的 URL 地址</span></div><div class="line">$ git remote -v  <span class="comment">#验证 url 是否可用</span></div></pre></td></tr></table></figure></p>
<p>将同步资源到 Github 中心仓库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin master</div></pre></td></tr></table></figure></p>
<p>如果之前复制的 URL 为 https 形式<br>如:<code>https://github.com/zoorz/hexo-theme-next.git</code>。<br>同步时要求你输入 Github 的帐号用户名和密码进行验证。</p>
<p>到这里，流程图中由 Hexo 到 Github 的环节就完成了。如果都能顺利进行的话，接下来的操作会更加顺畅。</p>
<hr>
<p>好了，休息下。看个短片：《Life is Beautiful》</p>
<iframe frameborder="0" width="640" height="498" src="http://v.qq.com/iframe/player.html?vid=n0165gb59wo&tiny=0&auto=0" allowfullscreen></iframe>

<p>这是我个人非常喜欢的一部短片。国外拿奖无数。值得一看和玩味其中所要表达的东西。</p>
<hr>
<p>继续！</p>
<p><strong>在开始下一个环节的操作之前。这里先来介绍下最终可以通过线上的独立域名：类似<a href="zouzhi-net">zouzhi.net</a>访问自己的博客需要依赖的工具 Github Pages</strong></p>
<p><a href="https://pages.github.com/" target="_blank" rel="external">Github Pages</a> 是 Github 为开发者提供的一个用于快速构建团队或者项目站点主页的工具。通过它你可以快速地搭建起自己的个人主页(User or organization Site) 或者项目主页（Project Site）。Github Pages 默认支持 Jekyll 博客框架（工作原理类似 Hexo，但是 Jekyll 是基于 Ruby开发。相对 Hexo 操作配置较为复杂）。感兴趣的可以在 Pages 的主页或者 Jekyll 官网进行了解。由于这里采用 Hexo 作为博客框架，关于它就不做过多介绍了。</p>
<h4 id="基于-Github-Pages-创建线上站点"><a href="#基于-Github-Pages-创建线上站点" class="headerlink" title="基于 Github Pages 创建线上站点"></a>基于 Github Pages 创建线上站点</h4><p>进入我们之前创建的“my site”项目，为项目创建一个名为“gh-pages”分支。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b gh-pages</div></pre></td></tr></table></figure></p>
<p>这样就基于当前 master(默认)分支创建了一个新的分支。分支名为”gh-pages”是 Github Pages 上项目主页构建默认采用的分支（具体参照 Pages 的官方介绍）</p>
<p>将分支推送到中心仓库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure></p>
<p>此时 gh-pages 是基于 master 分支创建，所包含的是 Hexo 的项目源码。我们最终实现的线上站点 gh-pages 分支所包含的应该是通过 hexo 生成的静态文件。</p>
<h4 id="通过-Hexo-deployer-git-完成线上部署"><a href="#通过-Hexo-deployer-git-完成线上部署" class="headerlink" title="通过 Hexo-deployer-git 完成线上部署"></a>通过 Hexo-deployer-git 完成线上部署</h4><p>针对上面 gh-pages 分支。我们需要借助 Deployer 工具完成 hexo 本地生成的项目静态文件的推送。(以下部分可参见:Hexo-doc <a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="external">Deploy 部分</a>)</p>
<p>安装 Hexo-deployer-git<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>然后在项目目录中找到<code>_config.yml</code> 文件，添加如下配置:<br><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> git</div><div class="line"><span class="attr">  repo:</span> &lt;your repository url<span class="string">&gt;</span></div><div class="line"><span class="attr">  branch:</span> gh-pages</div></pre></td></tr></table></figure></p>
<table>
<thead>
<tr>
<th>Option</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>repo</code></td>
<td>GitHub repository URL</td>
</tr>
<tr>
<td><code>branch</code></td>
<td>Branch name. The deployer will detect branch automatically if you are using GitHub or GitCafe.</td>
</tr>
<tr>
<td><code>message</code></td>
<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>
</tr>
</tbody>
</table>
<p>通过 hexo deploy 将生成的静态文件同步到中心版本库 gh-pages 分支</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate --deploy</div></pre></td></tr></table></figure>
<p>推送成功后，可以通过：<code>http://username.github.io/project</code>。其中 <code>project</code> 为你的项目名</p>
<p><strong>提醒:</strong> 在同步时可能会出现报错，因为我们在将项目托管到 Github 上的操作时，拷贝的 repo url 为 https。而 Github 做 push 操作时是需要做用户认证的。hexo deploy 要求认证认证方式为 SSH 方式。关于如何将 https 更换为 SSH 认证方式。在接下来的 Travis 部分的操作中，会有相关的介绍。具体参照：[Github Generating SSH keys][ssh-keygen]。</p>
<h3 id="三、Travis-配置"><a href="#三、Travis-配置" class="headerlink" title="三、Travis 配置"></a>三、Travis 配置</h3><p>由于我们最终需要实现的是类似 Github Pages 默认对Jekyll 的支持一样来适配Hexo，做到写作者只需关心写作，而不需要每次都必须借助 hexo 的指令来完成文章的生成和发布。这时就需要引入 Travis-CI。 </p>
<h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4><p>首先登录 Travis-Ci，要求同 Github 帐号进行绑定。完成绑定，通过首页的Account 进入仓库列表，进行仓库同步和授权操作。</p>
<p><img src="http://7xl4wx.com1.z0.glb.clouddn.com/static/images/post/travis-account.png" alt="travis account"></p>
<p>然后选择对应的项目仓库进行授权。</p>
<p><img src="http://7xl4wx.com1.z0.glb.clouddn.com/static/images/post/toggle-switch.png" alt="toggle-switch"></p>
<p>其实关于 Travis-ci 将要完成的工作，通过上面的简单介绍和流程图相信有一个大致了解。其实其主要的作用是将原本需要在本地完成的类似 Hexo generate，deploy 的操作，全部移交至 travis-ci 虚拟机的任务来自动处理。我们只需要在项目的目录中添加一个<code>.travis.yml</code> 文件，后面在其中配置好我们指定给 travis 要完成的任务就 OK 了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ touch .travis.yml</div></pre></td></tr></table></figure></p>
<p>这里需要注意的是，默认 travis-ci 是不具备 git repo 的写权限的。要实现我们的需求，通过网络找到了这篇博客:<a href="http://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/。" target="_blank" rel="external">http://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/。</a></p>
<h4 id="密钥生成"><a href="#密钥生成" class="headerlink" title="密钥生成"></a>密钥生成</h4><hr>
<p>在终端中(Mac/Linux可用,Window 可能通过第三方密钥生成工具或者cygwin实现)生成针对该项目的 SSH 密钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></div></pre></td></tr></table></figure></p>
<p>在生成过程中,passphrase 留空，因为travis-ci 中输入密码无法做到。同时保存目录保存为默认就好(~/.ssh/id_rsa)。这里为了实现今后本地的文章编写完以后同步到 github 版本库时免除每次输入密码的痛苦。针对本地的提交也改为采用 SSH 方式。（其实也可以下载 Github 的图形化客户端工具来实现）。</p>
<p>确保 ssh-agent 能正常工作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent)</span> -s"</span></div><div class="line">Agent pid 98304</div></pre></td></tr></table></figure></p>
<p>添加生成好的 SSH key 到 ssh-agent<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure></p>
<p>复制公钥内容到剪切板<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pbcopy &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>
<p>将公钥配置到 github 上项目的 deploy key 中。</p>
<p><img src="http://7xl4wx.com1.z0.glb.clouddn.com/static/images/post/deploy-key.png" alt="deploy-key"></p>
<p>测试连接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>查看提示,是否链接成功。</p>
<p>将本地项目对应的中心仓库 URL 更换为 SSH 格式。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> my-site <span class="comment"># 进入项目目录</span></div><div class="line">$ git config --local --list <span class="comment"># 查看当前中心仓库的 URL, 此时应该为 https 格式</span></div><div class="line"></div><div class="line">...</div><div class="line">remote.origin.url=https://github.com/username/project.git</div><div class="line">...</div><div class="line"></div><div class="line">$ git config --local remote.origin.url git@github.com:username/project.git   <span class="comment"># 将中心仓库 URL 更换为 SSH 格式</span></div></pre></td></tr></table></figure></p>
<p>测试同步<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push</div></pre></td></tr></table></figure></p>
<p>修改项目<code>_config.yml</code>文件中<code>deploy</code>配置段<code>repo</code>为 SSH 格式 URL。<br><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> git</div><div class="line"><span class="attr">  repo:</span> git@github.com:username/project.git</div><div class="line"><span class="attr">  branch:</span> gh-pages</div></pre></td></tr></table></figure></p>
<hr>
<p>以上操作只是为我们以后在文章写好后提交至Github中心仓库时免除了输入用户名和密码的烦恼。涉及到 travis-ci 的自动构建。我们还需要针对密钥进行再次加密。然后在 travis 上进行解密获取同步密钥，用密钥完成 Travis 对 Github 上的项目仓库的写权限。</p>
<h4 id="私钥加密"><a href="#私钥加密" class="headerlink" title="私钥加密"></a>私钥加密</h4><p>本地安装 travis-ci。（travis 工具采用 ruby开发。需要本地安装有 ruby 开发环境）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ gem install travis</div></pre></td></tr></table></figure></p>
<p>登录 travis<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ travis login --auto</div></pre></td></tr></table></figure></p>
<p>这样通过 travis 提供的命令工具就可以加密私钥文件，并将加密用的密码存入 travis 服务器。以环境变量形式作为后面解密使用。</p>
<p>加密密钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ travis encrypt-file ~/.ssh/id_rsa --add</div></pre></td></tr></table></figure></p>
<p>这时会生成加密后的密钥文件 id_rsa.enc。同时会将相关的指令插入<code>.travis.yml</code>文件中。</p>
<p>推荐在项目目录中创建一个.travis 目录。并将 enc 文件移入其中。同时在.travis 目录中创建一个名为<code>ssh-config</code>文件。内容如下<br><figure class="highlight yaml"><figcaption><span>ssh-config</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Host github.com</div><div class="line">	User git</div><div class="line">	StrictHostKeyChecking <span class="literal">no</span></div><div class="line">	IdentityFile ~/.ssh/id_rsa</div><div class="line">	IdentitiesOnly <span class="literal">yes</span></div></pre></td></tr></table></figure></p>
<h4 id="travis-配置文件"><a href="#travis-配置文件" class="headerlink" title="travis 配置文件"></a>travis 配置文件</h4><p>添加上更多针对 hexo 的相关任务配置。最终的<code>.travis.yml</code>文件应该为如下所示。具体的细节这里不做过多介绍了。</p>
<figure class="highlight yaml"><figcaption><span>.travis.yml</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="attr">language:</span> node_js</div><div class="line"></div><div class="line"><span class="attr">node_js:</span></div><div class="line"><span class="bullet"> -</span> <span class="string">"0.12.7"</span></div><div class="line"></div><div class="line"><span class="attr">branches:</span></div><div class="line"><span class="attr">  only:</span></div><div class="line"><span class="bullet">  -</span> master</div><div class="line"></div><div class="line"><span class="attr">before_install:</span></div><div class="line"> <span class="comment"># Decrypt the private key</span></div><div class="line"><span class="bullet"> -</span> openssl aes<span class="bullet">-256</span>-cbc -K $encrypted_d179d3b595b7_key -iv $encrypted_d179d3b595b7_iv -in .travis/id_rsa.enc -out ~/.ssh/id_rsa -d</div><div class="line"> <span class="comment"># Set the permission of the key</span></div><div class="line"><span class="bullet"> -</span> chmod <span class="number">600</span> ~/.ssh/id_rsa</div><div class="line"> <span class="comment"># Start SSH agent</span></div><div class="line"><span class="bullet"> -</span> eval $(ssh-agent)</div><div class="line"> <span class="comment"># Add the private key to the system</span></div><div class="line"><span class="bullet"> -</span> ssh-add ~/.ssh/id_rsa</div><div class="line"> <span class="comment"># Copy SSH config</span></div><div class="line"><span class="bullet"> -</span> cp .travis/ssh_config ~/.ssh/config</div><div class="line"> <span class="comment"># Set Git config</span></div><div class="line"><span class="bullet"> -</span> git config --global user.name <span class="string">"zoorz"</span></div><div class="line"><span class="bullet"> -</span> git config --global user.email zoechow8@gmail.com</div><div class="line"></div><div class="line"><span class="attr">install:</span></div><div class="line"><span class="bullet"> -</span> npm install hexo-cli -g</div><div class="line"><span class="bullet"> -</span> npm install hexo --save</div><div class="line"><span class="bullet"> -</span> npm install</div><div class="line"></div><div class="line"><span class="attr">script:</span></div><div class="line"><span class="bullet"> -</span> hexo clean </div><div class="line"><span class="bullet"> -</span> hexo generate </div><div class="line"><span class="bullet"> -</span> hexo deploy</div></pre></td></tr></table></figure>
<p><strong>注意：以上的配置文件中的相关配置内容需要针对各自的项目进行修改。不可直接拷贝。</strong></p>
<p>完成了上面的一系列操作。终于可以到见证奇迹的时刻了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git add .</div><div class="line">$ git commit -m &quot;site publish&quot;</div></pre></td></tr></table></figure></p>
<p>正常情况下，进行到这里如果能正常同步文件到中心仓库并且调用Travis-ci 实现站点发布的话。对于静态博客整个构建流程图肯定是有了一定了解。此时我们的独立博客只能通过：<code>http://username.github.io/project</code> 访问。如果需要为其配以一个独立的域名以显得高端大气上档次，那么我们就还需要再干点活了。</p>
<h2 id="独立域名配置"><a href="#独立域名配置" class="headerlink" title="独立域名配置"></a>独立域名配置</h2><h3 id="注册域名"><a href="#注册域名" class="headerlink" title="注册域名"></a>注册域名</h3><p>推荐<a href="http://www.net.cn" target="_blank" rel="external">万网</a>（已被阿里收购）进行购买。当然国外的话 <a href="https://www.godaddy.com/" target="_blank" rel="external">godaddy</a> 也是不错的选择。具体的域名注册这里就不介绍了。</p>
<h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>注册好域名以后，推荐将域名采用 <a href="http://www.dnspod.cn" target="_blank" rel="external">DNSPOD</a> 进行解析。关于如何变更DNS解析。参见：<a href="https://support.dnspod.cn/Kb/showarticle/tsid/40/" target="_blank" rel="external">https://support.dnspod.cn/Kb/showarticle/tsid/40/</a>。变更成功以后，我们进入 DNSPOD 对应的域名管理页面。为其添加解析到我们的托管在 Github上的博客 CNAME 记录。</p>
<p><img src="http://7xl4wx.com1.z0.glb.clouddn.com/static/images/post/dnspod-cname-config.png" alt="dnspod-config"></p>
<p>可能需要5-10分钟解析生效。这期间，我们回到我们本地项目目录。进入项目<code>source</code>目录，创建一个名为<code>CNAME</code>的文件。内容设置我们的域名。<br><figure class="highlight plain"><figcaption><span>CNAME</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zouzhi.net</div></pre></td></tr></table></figure></p>
<p>将<code>CNAME</code>文件同步到中心仓库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git add .</div><div class="line">$ git commit -m <span class="string">"Config Custom Domain"</span></div><div class="line">$ git push</div></pre></td></tr></table></figure></p>
<p>然后网站的构建和发布就交给 travis-ci吧。等待片刻，你就可以通过独立域名：<a href="http://zouzhi.net">zouzhi.net</a> 访问自己的博客了！</p>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><h3 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h3><p>hexo 的默认主题，个人感觉观感体验不是太好，你可以基于默认主题进行自定义修改。这里就能体现出独立静态博客极大的自由度。关于主题的定制和开发作为拓展自行研究。为了更好的体验 Hexo 的便捷性，已经有一系列非常不错的主题可供选用。<a href="https://hexo.io/themes/" target="_blank" rel="external">Hexo Themes</a>。下面以 zouzhi.net 所用主题 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">Next</a> 为例进行介绍。</p>
<ol>
<li>首先通过 git 将主题 clone 到本地的 hexo 项目中</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd my-site # 进入前面通过 hexo 创建的项目目录</div><div class="line">git clone https://github.com/iissnan/hexo-theme-next.git  theme/next</div></pre></td></tr></table></figure>
<ol>
<li>修改项目<code>_config.yml</code>文件，将主题设置为 <code>next</code></li>
</ol>
<p>用文本编辑工具打开<code>_config.yml</code>。找到 <code>theme</code> 配置字段，将 <code>theme: landscape</code> 改为 <code>theme: next</code></p>
<ol>
<li>启动 hexo 服务器，查看是否生效</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>访问: <a href="http://0.0.0.0:4000" target="_blank" rel="external">http://0.0.0.0:4000</a></p>
<p>如果主题配置成功，具体的主题细节修改调整，可以参照 Next 主题介绍文档操作。作者非常用心，文档很详细。<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">Next 使用文档</a></p>
<h3 id="细节自定义"><a href="#细节自定义" class="headerlink" title="细节自定义"></a>细节自定义</h3><p>在原有主题的基础上，我为内容区块添加了一个 <code>texture</code> 纹理背景，素材来自于<a href="http://nipponcolors.com/" target="_blank" rel="external">日本传统色</a>所用纹理背景。感官上使整个站点更有纸张版的阅读质感。同时为首页的各个文章列表项添加了底部border 增强了项与项之间的辨识。此外还有一些其余部分的CSS参数修改。感兴趣的可以直接 fork 项目，自行研究。有意见或建议欢迎一起探讨。</p>
<h2 id="文章发布"><a href="#文章发布" class="headerlink" title="文章发布"></a>文章发布</h2><p>通过上面的一系列操作。我们就构建起了一个完全属于自己的独立静态博客：采用 Markdown 的友好书写格式，带着 geek 范的高自由度，配以完全独立的域名，永不丢失的内容和版本信息···</p>
<p>文章发布只需要在你的项目 source/_post目录中创建一个<code>.md</code> 文件。然后按照 Markdown 的书写格式尽情书写你的文字。完成后同步至 Github。文章就会自动完成线上的发布。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git add .</div><div class="line">$ git commit -m <span class="string">"Article title"</span></div><div class="line">$ git push</div></pre></td></tr></table></figure></p>
<p>当然如果是在本机的话。你还可以通过 hexo 命令来生成文章。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;your post name&quot;</div></pre></td></tr></table></figure></p>
<p>不过，完成上面 travis-ci 环节的接入就是想要摆脱 hexo 的操作。让写作发布可以成为一件随时随地不受设备限制而愉快进行的事。因此这就显得有点多余了。</p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>本文所有的操作介绍，部分可能太过粗略，对于完全陌生的读者来说，学习难度可能较高。此外另有部分的操作介绍相对于了解和熟悉工具的读者来说可能又稍显冗繁。其实这篇带点科普性质的实操类文字是我许久前就想写的。只是由于拖延，直到现在才见诸笔端。文字部分难免欠周全，算不上教程。权当是一个学习过程的记录罢了。一来便于日后进行查阅，二来锻炼下自己早已生疏的文字能力。当然，如果能给一直阅读到此处的你带来实际的帮助，那就功不唐捐了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇主要针对喜欢写写文字，但又不想受限于千篇一律的博客平台，想寻求一个没有广告，简洁纯净，可以完全按自己的方式来写作的文字爱好者。当然如果有点 geek 范，爱好编程则再好不过了。当然，如果觉得操作过于繁琐难懂，但仍想拥有一个同本站一般的博客，可以文章下面&lt;a href=&quot;
    
    </summary>
    
      <category term="编程" scheme="http://zouzhi.net/categories/programming/"/>
    
    
  </entry>
  
  <entry>
    <title>为什么培养一个富有意义的早起习惯将会让你更成功(转译)</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-25-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%9F%B9%E5%85%BB%E4%B8%80%E4%B8%AA%E5%AF%8C%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84%E6%97%A9%E8%B5%B7%E4%B9%A0%E6%83%AF%E5%B0%86%E4%BC%9A%E8%AE%A9%E4%BD%A0%E6%9B%B4%E6%88%90%E5%8A%9F-%E8%BD%AC%E8%AF%91.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-25-为什么培养一个富有意义的早起习惯将会让你更成功-转译.html</id>
    <published>2015-08-25T02:15:44.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我的亲身经历"><a href="#我的亲身经历" class="headerlink" title="我的亲身经历"></a>我的亲身经历</h2><p>从孩提时代一直到成年，我从未考虑过自己会成为一个“morning person（早起者）”。我是一个夜猫子。在我建筑工程学生生涯期间。我总是熬夜工作知道黎明才入睡。 然而当我在一个建筑设计事务所开始我的职场工作时，我被要求每天早上7点起床。。显然我很受不了。我每天总是拖到最后一分钟起床，然后不吃早餐，匆匆赶着去上班，然后每天都感觉时间不足，很多事情来不及做。</p>
<p>这个习惯严重地损害了我的身心健康，并极大的影响到我的工作效率。</p>
<a id="more"></a>
<p>现在，我在家为自己工作，每天很多的事情要处理，并且我每天都很愉快的在5：30左右起床。甚至在周末，我通常也会在7：00起来。 可能是因为我喜欢自己的工作，我做的一切工作都是对自己负责。<br>然而，自从我学习了解到培养一个好习惯和早起日常对人生的成功起着如此关键的作用这一实事时。我认为除了早起，还有更多事情值得去做。</p>
<p><strong>一个早起惯例为接下来的一整天定下了一个总基调。如果每一天都合理的度过。那么你的人生也将变得更得心应手。</strong></p>
<p>这年的年初，我定下了一个目标就是每天坚持早起保证以一个积极的状态度过每一天。这个习惯是在今年的1月份当我读到 Hal Elrod的 <a href="http://amzn.to/1BIpCV6" target="_blank" rel="external">The Miracle Morning</a> 这本书时，我明白了没有一个良好的早起惯例，无序和不堪重负的状态会伴随而来。</p>
<p>我需要更加明智的工作，而不是更加困难。然而第一步就是养成一个好习惯。</p>
<h3 id="我需要做的首要的事就是放弃我就是一个“夜猫子“的想法。"><a href="#我需要做的首要的事就是放弃我就是一个“夜猫子“的想法。" class="headerlink" title="我需要做的首要的事就是放弃我就是一个“夜猫子“的想法。"></a>我需要做的首要的事就是放弃我就是一个“夜猫子“的想法。</h3><p>在过去的几个月里，我一直在尝试通过“习惯的叠加”以期形成一个良好的早起惯例而为我所用。习惯叠加是一种通过不断的在目前正在做的一些日常习惯事项之前叠加新的事项从而培养成一个新的生活习惯的方式。例如，在我早上刷牙（当前习惯）前我会冥想（新习惯）3分钟。我发现这个带有个人仪式感的行为开始帮助我带入了一个正确的心态从而抵消了早晨拖沓的习惯。这里有一篇我之前发表在 <a href="https://medium.com/life-learning/what-stephen-curry-can-teach-us-about-creating-successful-habits-ed307dd7561f" target="_blank" rel="external">Medium</a> 上的关于这一具体感受的文章.</p>
<p>培养一个早起惯例的另一个好处是防止心理疲劳.</p>
<p>从我们每天起床开始,每个人每天都只能拥有一定量的心智能量。伴随着每天做出的各种决策能量在慢慢的消逝。如果你每天早晨就要做出成百上千个没什么意义的决策，接着这会直接影响到接下来的一整天你的决策。这一点显得尤为突出。</p>
<h3 id="去尝试通过日常惯例让每天起床后的第一个小时变得有一点点与众不同。"><a href="#去尝试通过日常惯例让每天起床后的第一个小时变得有一点点与众不同。" class="headerlink" title="去尝试通过日常惯例让每天起床后的第一个小时变得有一点点与众不同。"></a>去尝试通过日常惯例让每天起床后的第一个小时变得有一点点与众不同。</h3><p>拒绝心理疲劳，这也就是为什么 <a href="http://mashable.com/2014/11/17/mark-zuckerberg-and-other-insanely-successful-people-wear-the-same-thing-every-day-and-for-good-reason/" target="_blank" rel="external">马克 扎克伯格每天的穿着都一样</a>. 终于清楚的了解到我每天伊始的90分钟的表现所带来的巨大能量.因为它帮助了我感觉到对生活的控制和非反应式, 这减少了焦虑确保更高效的度过接下来的一天.</p>
<blockquote>
<p>改变你的人生从改变你每一天所做的事情开始. 人生成功的秘诀是找到自己的日常生活.<br>– John C Maxwell</p>
</blockquote>
<h2 id="我的每天伊始60分钟"><a href="#我的每天伊始60分钟" class="headerlink" title="我的每天伊始60分钟"></a>我的每天伊始60分钟</h2><h3 id="1-起床喝16盎司的冰水"><a href="#1-起床喝16盎司的冰水" class="headerlink" title="1. 起床喝16盎司的冰水"></a>1. 起床喝16盎司的冰水</h3><p> 过去的 6 - 10 个小时里身体没有摄入任何液体,你需要补充水分唤醒你的身体。喝水是一个很好的方式来促进你的新陈代谢，特别是喝冰水。</p>
<h3 id="2-做伸展运动或者7分钟锻炼"><a href="#2-做伸展运动或者7分钟锻炼" class="headerlink" title="2. 做伸展运动或者7分钟锻炼"></a>2. 做伸展运动或者7分钟锻炼</h3><p> 在早晨做一点轻度的伸展运动，可以摆脱慵懒感并让这一天活跃起来。只需要做几分钟。这里是我做的一些<a href="http://www.sparkpeople.com/blog/blog.asp?post=rise_and_shine_8_stretches_you_should_do_each_morning" target="_blank" rel="external">伸展运动</a>。 我使用 7 分钟锻炼 app 来记录。</p>
<h3 id="3-洗一个冷水澡（3分钟）"><a href="#3-洗一个冷水澡（3分钟）" class="headerlink" title="3. 洗一个冷水澡（3分钟）"></a>3. 洗一个冷水澡（3分钟）</h3><p> 当我第一次听到朋友们谈论关于在早上洗冷水澡是，我认为他们脑子坏了。然后在一月中旬，突然一天我决定尝试一下。我毫不撒谎：很操蛋。然而，我感觉我充满了能量和活力。从那以后我每天都会这样。如果你也在考虑这个，首先需要做好不舒服的心理准备。但是更深层次的意思是你会感觉到一种前所未有的活力和新鲜感。此外，它还有<a href="http://www.medicaldaily.com/benefits-cold-showers-7-reasons-why-taking-cool-showers-good-your-health-289524" target="_blank" rel="external">很多健身益处</a>。</p>
<h3 id="4-刷牙穿衣服"><a href="#4-刷牙穿衣服" class="headerlink" title="4. 刷牙穿衣服"></a>4. 刷牙穿衣服</h3><h3 id="5-冥想"><a href="#5-冥想" class="headerlink" title="5. 冥想"></a>5. 冥想</h3><p> 也许我的日常惯例中最重要的一部分就是清理我的思绪以便我在接下的一天中更能集中精力.关于冥想我了解的还很浅.我只是把过去的6个月里把它加入到的每一天生活中.</p>
<p> 我个人使用”缪斯头带”，因为作为一个入门者，我有很多问题在学习如何冥思和理解我的思绪何时在转移。而缪斯头带可以察觉我的大脑信号让我知道什么时候我的大脑是平静而集中的什么时候不是。对于冥想，这不是必须的。同时我对 Headspace 这款 APP 了解的比较多。</p>
<p> 自从开始把冥想作为每天日常习惯中的一部分 我已经看到自己在精力集中，工做效率，应急水品方面都有巨大的进步。</p>
<h3 id="6-做防弹咖啡（有时做早餐）"><a href="#6-做防弹咖啡（有时做早餐）" class="headerlink" title="6. 做防弹咖啡（有时做早餐）"></a>6. 做防弹咖啡（有时做早餐）</h3><p> 略过</p>
<h3 id="7-阅读（20分钟）"><a href="#7-阅读（20分钟）" class="headerlink" title="7. 阅读（20分钟）"></a>7. 阅读（20分钟）</h3><p> 阅读的二十分钟对我来说意义非凡。不仅享受，同时阅读关于观念模式，个人成长和商业方面的书籍激励我让创意的思绪一直流淌。如果你好奇我读的有哪些书。可以看<a href="https://docs.google.com/spreadsheets/d/1H2pLK9UadCoQCXD01r60ThQFYkpAlFyGlQiTFLrVKvA/edit#gid=0" target="_blank" rel="external">这里</a></p>
<h3 id="8-早书-15-20分钟"><a href="#8-早书-15-20分钟" class="headerlink" title="8. 早书(15-20分钟)"></a>8. 早书(15-20分钟)</h3><p> 做为早起惯例中的一部分它建立的更早一些。它是一个创造的过程。每天早晨写750字（大约3页）左右。不是博客或者其他任何我想这个世界发表的。它是我大脑中的难以名状的意识流。大体上相当于一个大脑中的想法堆积站。里面堆积了关于生意，生活和其他决定。无论我想从我的大脑中清除什么。这使得我的大脑工作和思考更富有创造力。</p>
<h3 id="9-日常目标（5分钟）"><a href="#9-日常目标（5分钟）" class="headerlink" title="9. 日常目标（5分钟）"></a>9. 日常目标（5分钟）</h3><p> 每天早晨我会写下一天的工作目标。首先，我写下一个我正在努力的长期目标。我每天都写确保我始终记住我的方向而不至于脱轨。然后，我写下这一天的目标。也就是3件这一天我需要完成以让我离长远目标更近的事情。我通常有一个13周路线图计划，让我的目标达成有一个阶段性的时间线。我会在另一片文章中详细介绍这个过程。但是大体上它就是一个计划结构以便我知道在接下来的3个月里我应该做什么。如果对这个感兴趣，可以联系作者。</p>
<h3 id="10-每天计划（3分钟）"><a href="#10-每天计划（3分钟）" class="headerlink" title="10. 每天计划（3分钟）"></a>10. 每天计划（3分钟）</h3><p> 我把每天可中断的时间增加到三十分钟。这时可以进来电话或者约会。然后计划我这一天的人物。我总是吧最重要的事情（如巧合般通常是最没有趣的）放在开始以便我能确保完成。我尝试拒绝预约任何会议或者约会知道下午的晚些时候，如果我力所能及的话。因为我的早晨是我的最高效的神圣时间。</p>
<h2 id="开始工作"><a href="#开始工作" class="headerlink" title="开始工作"></a>开始工作</h2><p>我不会查看手机，邮件，facebook，twitter 直到我完成我这一天中最重要的任务。在晚上我提前暂停我的通知提醒。这样确保早上如果我需要发送任何邮件我不需要对于发来的邮件应接不暇。<strong>记住，邮件是别人占用你的时间。优先你的目标和任务在你看邮件之前。确保不会进入一种反应模式而取而代之为一种更主动的模式</strong></p>
<p>我的早起管理总共超过了一个小时。我强调一个良好的早起惯例对于你的重要性不能再多了。因为它将让你有一个更成功的日常和人生。此外，我所做的不一定适合所有人。我试验了几件不同的事然后找出了对我有效的。你也应该如此。 很快你就会明白什么事对你有效。然后你会很享受每天的开始。</p>
<p>我很乐意听到关于你的早起惯例。你的每天伊始的60分钟是怎样的呢？</p>
<hr>
<p>摘译自<a href="https://medium.com/life-learning/how-creating-a-meaningful-morning-routine-will-make-you-more-successful-1b7372655938" target="_blank" rel="external">《Why Creating a Meaningful Morning Routine Will Make You More Successful》</a>.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;我的亲身经历&quot;&gt;&lt;a href=&quot;#我的亲身经历&quot; class=&quot;headerlink&quot; title=&quot;我的亲身经历&quot;&gt;&lt;/a&gt;我的亲身经历&lt;/h2&gt;&lt;p&gt;从孩提时代一直到成年，我从未考虑过自己会成为一个“morning person（早起者）”。我是一个夜猫子。在我建筑工程学生生涯期间。我总是熬夜工作知道黎明才入睡。 然而当我在一个建筑设计事务所开始我的职场工作时，我被要求每天早上7点起床。。显然我很受不了。我每天总是拖到最后一分钟起床，然后不吃早餐，匆匆赶着去上班，然后每天都感觉时间不足，很多事情来不及做。&lt;/p&gt;
&lt;p&gt;这个习惯严重地损害了我的身心健康，并极大的影响到我的工作效率。&lt;/p&gt;
    
    </summary>
    
    
      <category term="成长" scheme="http://zouzhi.net/tags/%E6%88%90%E9%95%BF/"/>
    
      <category term="习惯" scheme="http://zouzhi.net/tags/%E4%B9%A0%E6%83%AF/"/>
    
      <category term="早起" scheme="http://zouzhi.net/tags/%E6%97%A9%E8%B5%B7/"/>
    
  </entry>
  
  <entry>
    <title>阅读,消除无知和迷茫的最佳方式</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-16-%E9%98%85%E8%AF%BB-%E6%B6%88%E9%99%A4%E6%97%A0%E7%9F%A5%E5%92%8C%E8%BF%B7%E8%8C%AB%E7%9A%84%E6%9C%80%E4%BD%B3%E6%96%B9%E5%BC%8F.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-16-阅读-消除无知和迷茫的最佳方式.html</id>
    <published>2015-08-16T01:42:15.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>当处于迷茫彷徨的状态是, 找到一个自己的出口, 用书籍来填补无知, 是最有效的解决办法. 当然你还得行动.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当处于迷茫彷徨的状态是, 找到一个自己的出口, 用书籍来填补无知, 是最有效的解决办法. 当然你还得行动.&lt;/p&gt;

    
    </summary>
    
    
      <category term="不安" scheme="http://zouzhi.net/tags/%E4%B8%8D%E5%AE%89/"/>
    
      <category term="阅读" scheme="http://zouzhi.net/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="随笔" scheme="http://zouzhi.net/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>马佳佳的《绝望的大学生》的另一面</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-16-%E9%A9%AC%E4%BD%B3%E4%BD%B3%E7%9A%84%E3%80%8A%E7%BB%9D%E6%9C%9B%E7%9A%84%E5%A4%A7%E5%AD%A6%E7%94%9F%E3%80%8B%E7%9A%84%E5%8F%A6%E4%B8%80%E9%9D%A2.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-16-马佳佳的《绝望的大学生》的另一面.html</id>
    <published>2015-08-16T00:51:17.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>最近在微博引起热议的<a href="http://weibo.com/p/1001603835651136093282" target="_blank" rel="external"><code>马佳佳在 TEDxChongqing 的演讲《绝望的大学生》</code></a>在我看过之后，仿佛又找到当时自己在空间里读到W君的一篇强力鸡血文后连夜写出《文字欲（狱）》的冲动。“绝望“一词在力道的掌握上已经为博得眼球和热议打下了良好的基础。文中所用到的读书无用论，草根在互联网风口成功逆袭的案例，加之个性化的文字和论点表述俨然让这一切的发生成为了可能。但是脑袋发热的看过之后。回到自己的思维空间中，不免开始产生一些疑惑。这种感觉在社会濡染的这三年里已经被碎片化的成功学追杀的几近消亡。</p>
<a id="more"></a>
<p>其实彷徨源自内心的欲望和野心与自身的能力不匹配产生的落差。在现实的生活中可能很多人都处于这个状态，想要的得不到，想做的条件却不满足，而且永不满足。常常挂在嘴边的走出舒适区，其实往往刻意的走出又何尝不是因为一种心理上的不接受，不舒适而做出的逃离。</p>
<p>资源，链接，做给犀牛剔牙的小鸟。。。种种无数成功学中乏善可陈观点通过个性化的文字和配图换了个瓶子而已。</p>
<p>用打压，先驱者的姿态赢得热点话题，捕获膜拜粉丝。但是前提是首先个人已经成为热点，有BB的资本。</p>
<p>以个人做个性化品牌，一切个例都是独一无二的存在事实，不具备可推翻性。但同时也不具备可普适性。</p>
<p>引用热点概念和理念，别人都在看但不明白的，即使明白也不会操作的，即使已经操作了但是也不能带来成效的概念，忽而成为了现实案例摆在眼前。对于能通过标题和图片点入的粉丝毫无疑问会带来冲击和心理共鸣。</p>
<p>带来既视效果的产品广告软文变得越来越用营销价值。</p>
<p>以上是看过，想过，整理后的一些零散想法。下面PS 一条知乎上的站在针对演讲内容“破”的立场排行第一的评论：<a href="http://www.zhihu.com/question/29880763" target="_blank" rel="external"><code>如何评价马佳佳在 TEDxChongqing 的演讲《绝望的大学生》？</code></a></p>
<h2 id="评论内容"><a href="#评论内容" class="headerlink" title="评论内容"></a>评论内容</h2><p>《绝》是一篇非常典型的“破—立”的文章。这种套路，十几年前有横空出世的韩，十几年后有话题度颇热的马，中间夹着无数赵钱孙李周吴郑王，都在试图破旧立新，重建秩序。仅就《绝望的大学生》一文而言，虽然其作者马佳佳有传说中“越滚越大的技能点”和情趣美色的噱头，其影响力和说服力如果离开了互联网这样一个快速碎片化的平台，则空虚荒谬之处一览无余：“破”论时无术，“立”论时无道。</p>
<p>为什么说马“破”论时无术，稍微懂一点心理学和演讲技巧的人，就能在长篇累牍的“天之骄子跳楼了”“隔壁学渣逆袭了”的论调中看出她（可能无意识中）所用的论证谬误：</p>
<h3 id="1-诉诸恐惧"><a href="#1-诉诸恐惧" class="headerlink" title="1.  诉诸恐惧"></a>1.  诉诸恐惧</h3><p>以“绝望”为题，以迷茫开篇（我们姑且忽视那张自拍照片），“名校又名校”的人还是要“从零开始找工作从零开始调试技能”，不得不说非常抓人眼球，尤其是可能正被期末作业/毕业校招搞得焦头烂额所以水一水微博微信的年轻人，由焦虑而产生共鸣，再加张狗脸的图旁边配上绝望无聊游手好闲的关键词，还没等看内容呢就给人吓懵圈了。</p>
<h3 id="2-以偏盖全"><a href="#2-以偏盖全" class="headerlink" title="2.  以偏盖全"></a>2.  以偏盖全</h3><p>隔壁家小丽成了时尚博主，后桌二狗子靠发广告月入五十万，只有你一个人上学上到现在拿基本工资，傻了吧。但事实上，微博上发广告的万粉大V总共可能有多少个？偏偏以你老家为圆心五十米半径均匀分布毕生任务就是赚钱来恶心你？时尚博主就更少了，当然你要是把卖面膜的微商算进来，那当我没说。</p>
<h3 id="3-滑坡效应"><a href="#3-滑坡效应" class="headerlink" title="3.  滑坡效应"></a>3.  滑坡效应</h3><p>滑坡效应指的是什么样的谬误呢？举个例子，今天老李丢了钱包，可能回家老婆要打包回娘家跟他离婚，老李一气之下提着砍刀来大街上报复社会，最后十八死八十伤。同样的逻辑：学霸名校中读书太久，光知道考试其他的什么也不会，出校门只能从零开始找工作，社会板结买不起房被时代压迫只买得起二手小米，最后一个个穷疯了博士跳楼了（公平起见还是要指出这里马还是用了“个别案例”这个修饰语），真是惨绝人寰的想象力。</p>
<h3 id="4-论据不足"><a href="#4-论据不足" class="headerlink" title="4.  论据不足"></a>4.  论据不足</h3><p>在我粗略的阅读中，没有发现任何支持论点的论据。这个其实说起来很头痛，因为你永远没办法纠正一个没犯错的人。如果她引用了一个错误的例子或者把充分/必要条件搞混，那是很容易指出来的，但是我看到通篇的是“之前搜集了一圈问题还想做个百分比后来一看没必要了因为实在太雷同”，“大学的剩余价值在于⋯⋯就不赘述了”，期间夹杂着铁骨铮铮的论点“工业社会蹦跶没出路”，“搞明白了这些就能干掉90%的无头苍蝇”，并且动辄“这个时代”，“这个社会”。观点且不论真假，反正“大空”得可怕。</p>
<p><strong>但是让我真正觉得反感以及决定和朋友圈里一切为之背书的人保持距离的，是其“立论无道”。</strong></p>
<p>你可以看出《绝》一文中明显的鄙视链，赚到钱的段子手 &gt; 学霸，隔壁海滩上的老王 &gt; 知识分子爸妈，挣到了几百万的“任性地占有社会资源”的我马佳佳 &gt; 你们这些看不清形势死读书的学霸。说到底，她和她抨击过的旧的秩序和社会没有任何不同，只不过这里考试分数换成了操作技能，国外名校换成了八十万豪车，拯救当年那个险些退学的抑郁症少女的，也是央视主持人张绍刚的一句赞扬（我其实不能想象出比张绍刚更主流的代表）。以结果来justify过程，态度，和价值，是我能想到的一个90后最可悲的地方。</p>
<p>更不消说其中让我（作为大学的既得利益者）觉得荒谬甚至恐惧的论点，大学里考验的是忠实度，学到的往往是“过时的知识；可被技术替代的工具类知识，比如说语言；可被搜索引擎颠覆的知识”。如果全中国绝望的大学生真的如同马一样开了天眼意识到这些知识是“过时的，可被替代的，可被颠覆的”，那真是你国药丸。工具类的语言也是要习得和练习的，你搜出来的维基百科（or百度百科）也是有人编撰的，而多少人付出多少年的努力所留下的科学上技术上文化上的努力，一句过时便被轻描淡写概括了。我期待看到下一个十年互联网成为常态的时候，知识，或者大胆来讲，传统课堂里传授的知识，和马佳佳，谁撑得更久。</p>
<p>然后是估计只有网络上的白岩松能说出来的忧国忧民的，发人深省的，掷地有声的论调，“我们的文化里没有契约精神的传统”，“祖国已经被你爸妈建设完了”，“这个时代已经不会再有任何钢筋水泥的气息”，然后文风一转——“我们这一代人的机会是用互联网改变吃喝玩乐衣食住行的服务升级，陌陌交友，滴滴打车”。写软文如此之拼命，月赚六位广告费也无可厚非。但是我想说的是，被马吐槽的学霸尚不敢让大家都去好好学习天天向上，被马抨击的70年代生人亦不敢让大家都进入大型企业。作为与互联网行业利益相关的人，马佳佳这种吃上一口肉就开始毫无限制的忽悠的行为，实在有愧良心，尤其是考虑到能被忽悠进去的，除了个别可能踏上流量降价的春风成为新一代段（guang）子（gao）手（gou）之外，其余99%的，以智商之低下，和心术之不正，都得算弱势群体了，说得过去吗？。</p>
<p>当然，我承认《绝》中有其可取之处，一是资本的流通，社交的必要；二是马个人在公关或者媒体行业的成长心得，但是它们的闪光点远远经不起马这样无限地荒谬地为了个人目的服务的夸张。同时，《绝》对于马打造自身品牌极有好处，虽然她的品牌就是她自身，此文一出，捧点有，骂点有，无论是不是买的，新浪热点是上了，无论是不是忽悠，朋友圈里是传开了，而后所有的纷争和喧嚣，又会变成她新的资本，用于流通，用于积累，用于社交，是厉害啊。</p>
<p>最后，让我绝不带任何讽刺意味地说一句，我衷心希望马小姐能成为她想成为的意见领袖，毕竟情趣用品店也倒闭了，非诚勿扰上也没当年一句“宁在宝马车上哭”的另一个马小姐红，前段时间轰轰烈烈的女性社区尚有待观望，我是“功不唐捐”的坚定信仰者，所以我真心希望她在某一个程度上获得她想要的成功，前提是稍微提高一下姿势水平，注意一下公众吃相。</p>
<hr>
<p>对于以上文字虽然不得不说有些戳中痛点后的宣泄愤懑成分。但是单看分析的条理，还是值得作为有力反方的说辞的。</p>
<p><a href="http://weibo.com/p/1001603835651136093282" target="_blank" rel="external"><code>图片来源:马佳佳在 TEDxChongqing 的演讲《绝望的大学生》</code></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在微博引起热议的&lt;a href=&quot;http://weibo.com/p/1001603835651136093282&quot;&gt;&lt;code&gt;马佳佳在 TEDxChongqing 的演讲《绝望的大学生》&lt;/code&gt;&lt;/a&gt;在我看过之后，仿佛又找到当时自己在空间里读到W君的一篇强力鸡血文后连夜写出《文字欲（狱）》的冲动。“绝望“一词在力道的掌握上已经为博得眼球和热议打下了良好的基础。文中所用到的读书无用论，草根在互联网风口成功逆袭的案例，加之个性化的文字和论点表述俨然让这一切的发生成为了可能。但是脑袋发热的看过之后。回到自己的思维空间中，不免开始产生一些疑惑。这种感觉在社会濡染的这三年里已经被碎片化的成功学追杀的几近消亡。&lt;/p&gt;
    
    </summary>
    
    
      <category term="思考" scheme="http://zouzhi.net/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="TED" scheme="http://zouzhi.net/tags/TED/"/>
    
      <category term="互联网概念" scheme="http://zouzhi.net/tags/%E4%BA%92%E8%81%94%E7%BD%91%E6%A6%82%E5%BF%B5/"/>
    
      <category term="马佳佳" scheme="http://zouzhi.net/tags/%E9%A9%AC%E4%BD%B3%E4%BD%B3/"/>
    
  </entry>
  
  <entry>
    <title>Life is Beautiful 电影欣赏</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-16-Life-is-Beautiful-%E7%94%B5%E5%BD%B1%E6%AC%A3%E8%B5%8F.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-16-Life-is-Beautiful-电影欣赏.html</id>
    <published>2015-08-16T00:47:08.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>这是看过的为数不多的一部在如此短的时间里将”人生”这个大主题用如此精彩的方式呈现的短片。耐人寻味。<br><a id="more"></a><br>片中的主人公从出生到轻生，生理和心理上都以一个侏儒的身份存在着。可怜之余却发现，这个世界对于每一个生灵都是公平的对待。出生，每天24小时的时间，死亡。任何人都逃不离这个循环，来到和离开这个世界的通道同时打开着，人类作为物质能量与大千世界的万物并无不同，保持着一种的平衡的状态持续存在着。悲伤，欣喜，苦难，幸运，这些情绪作为一种随机存在的能量在万物间流转，同样保持着一定的平衡。</p>
<p>《Life is Beautiful》的情节铺设，故事，人物设置都很简单。没有一句台词，却在各种环境音和人物的表现中将故事讲得很明白。结尾处的设计更是出人意料，完美的诠释了主题。</p>
<p>好了，静静欣赏吧！</p>
<hr>
<div class="video-container"><iframe src="https://player.vimeo.com/video/76127035?title=0&byline=0&portrait=0" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen></iframe></div>

<p><a href="https://vimeo.com/76127035" target="_blank" rel="external">Life is Beautiful (3D Animated Short Film)</a> from <a href="https://vimeo.com/benbrand" target="_blank" rel="external">Ben Brand</a> on <a href="https://vimeo.com" target="_blank" rel="external">Vimeo</a>.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是看过的为数不多的一部在如此短的时间里将”人生”这个大主题用如此精彩的方式呈现的短片。耐人寻味。&lt;br&gt;
    
    </summary>
    
    
      <category term="思考" scheme="http://zouzhi.net/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="电影人生" scheme="http://zouzhi.net/tags/%E7%94%B5%E5%BD%B1%E4%BA%BA%E7%94%9F/"/>
    
      <category term="电影" scheme="http://zouzhi.net/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>段子--有效的表达方式</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-16-%E6%AE%B5%E5%AD%90-%E6%9C%89%E6%95%88%E7%9A%84%E8%A1%A8%E8%BE%BE%E6%96%B9%E5%BC%8F.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-16-段子-有效的表达方式.html</id>
    <published>2015-08-16T00:35:26.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>看图涨姿势:<br><a id="more"></a><br><img src="http://zozorz-typechoupload.stor.sinaapp.com/1911738327.jpg" alt="yanjing.jpg"></p>
<p>段子的成功在于出乎意料的见解.</p>
<blockquote>
<p>这个段子就是这么严谨：亚洲人就是眼小</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看图涨姿势:&lt;br&gt;
    
    </summary>
    
    
      <category term="恶搞" scheme="http://zouzhi.net/tags/%E6%81%B6%E6%90%9E/"/>
    
      <category term="趣味" scheme="http://zouzhi.net/tags/%E8%B6%A3%E5%91%B3/"/>
    
      <category term="段子" scheme="http://zouzhi.net/tags/%E6%AE%B5%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>关于当前教育，思维模式，个人成长定位等一系列问题的思考</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-16-thinking-about-education-thinking-patterns-growth.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-16-thinking-about-education-thinking-patterns-growth.html</id>
    <published>2015-08-16T00:17:43.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>原文题为《一个清华学生留学香港后对人生的思考》，来源微信公众号。原文出处已经找不到。篇幅较长，个人感性的文字很多（很符合本博客的基调）。很多想法和思考需要自己结合自己的生活和经历去好好消化。多接受自己真实的感情流露。刚好闲逛的途中接触到这个博客：<a href="http://www.stevepavlina.com/blog/" target="_blank" rel="external">StevePavlina.com</a>。关注个人成长的一个有趣的个人博客（貌似知名度和访问量都挺不错。但为毛我现在才发现。可能真应了那句“找到自己，别人就会找到你”，这里的别人也泛指各种咨询。）纯分享文章。权当做个记录，以表示我的博客还在维护。</p>
<a id="more"></a>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文:"></a>正文:</h2><p>98年本科毕业，又顺利地被保研，当时的我只是一个憨憨的书呆子，纯洁的如同高中生，在清华这种和尚庙一般的理工学校里呆了四年，女孩似乎是山下的老虎，神秘得让我一见就脸红心跳。未来是什么对于我就是“读完研再说”，反正成绩还行，不读白不读。天上掉了馅饼，用我的兄弟的话来说。香港正好回归一周年，教育部要选派一批本科毕业生去香港科技大学读研，以加强两地的教育和科研交流。清华当然要占不少名额，系里的几个牛人去了美国，所以这个饼就掉到了我头上，确实是个不错的饼，不用考G、考托、全额奖学金，连什么手续都是学校和教育部包办了，我分文不花，后来香港科大的联络人抱怨中国的办事效率和程序烦琐，至于怎样的麻烦过程，我至今都一无所知。</p>
<h3 id="香港科大"><a href="#香港科大" class="headerlink" title="香港科大"></a>香港科大</h3><p>就这么糊里糊涂地来到了香港。依山傍海的科技大学美得如同世外桃源，现代感的建筑更让我们爽眼。当时的一个哥们说：“妈的，就是用银子在荒山野岭堆出来的，这样的物质条件算是让我满足了。”后来得知就是亚洲最美丽校园，倒也丝毫不怀疑。据说是香港政府感到了贸易和服务的优势正受中国沿海城市的挑战，而科技就是竞争力，就下了狠心投钱建了这学校，请来了学者。耗资400亿港币，相当于微软公司一年的纯利。组织的参观，教授的讲话，英语的培训很快就过去了，当时的新奇兴奋也褪得干净，每天面对这青山海景，最后也麻木得没有感觉了。由此可以推测娶一个漂亮老婆是没有多大意义的，如果不是为了炫耀。教授大多是华人，台湾和大陆出身的不少，反倒香港人是少数派，很多都是在北美的名校里拿了PhD,奔这里的高薪来了，他们的PhD头衔总要和名字相片挂一起，挂一辈子，Harvard和Standford之类的当然就香了。正教授可以一年拿到一百多万港币，也就是一个月可以买小汽车，比一般的美国大学高。知识真的值钱了，让我们充满了对未来的向往。</p>
<p>有回和教授们吃饭，谈及大陆大学教授的待遇，他们就感慨：“知识分子真被廉价到了可耻的地步。”我们也无话可说，反正不是我的错。然而钱不是好拿的，很多教师正是三十出头，教授职称还未到手，和学校只是几年合同，其他的学者也不断在申请进来，所以压力颇大，辛勤程度比公司打工仔有过之而无不及。既然自己做学问要紧，培养学生的事就要往后排了。刚进来时很多教师和我们亲切讲话，之后就不见了，好久不见就不认得。研究生当然有导师的，只要自己不去找他，他是肯定不会找我的。上课之后就是绝对的自由，当时自由得很是惬意。</p>
<p>萧伯纳说人生的苦闷有二，一是欲望没有被满足，二是它得到了满足。这话的确是部分的真理。当我住在这绝世美丽的地方，可以随心所欲的去商店买东西不用担心付不起帐，可以任意的支配自己时间时，最初的半年里，却发现情绪每况愈下。西方化的建筑设计将个人的所谓privacy保护发挥到极致，进了宿舍就基本感觉不到他人的存在，同单元的人也有独立的卧室，大家都是进了房，将门一关，隔离了，谁也不好意思去敲门。刚来时认识的一伙人，后来发现根本遇不着，如同消失了一般。同住一起的是三十好几的叔叔级人物，偶尔可以说上一两句话，却永无可能说很多。大家都像是住在不同的空间里做研究，忙碌的无瑕顾及他人。</p>
<p>平心而论，对于一个成熟的研究者，如果他有确定的目标和兴趣，对生活人生都不再有不切实际的幻想，准备投身科学研究中，那么这里真是一个好环境。但是我种茫茫睁着无知的眼睛的毛头小子，却是完全另外的感觉。那种茫然的苦闷感觉真是难以描述，找不到人玩，只是将窗户开了又关，关了又开，不停的喝水，仍然感觉不舒服。</p>
<p>怀念在清华的破楼里相互串门打闹的日子，怀念抱着篮球在走廊里叫一声就应者云集的日子，可是怀念解决不了问题。以孩子的心理去进入成熟严谨的环境，不可不说是一次考验。</p>
<p>多年的功利教育的辛勤培养，我一路顺当地走过来，发现完全的上当。我在成功的通过了一次次考后，最终都不知道我为什么要通过这些占距人生的考试，这个所谓的优秀学生只是在不停地让自己去符合那个“优秀”的外在标准来麻痹自己的虚荣心，而自己，那个真正的自己却一直没有存在过，没有发育过。我学的任何课程都无法帮我解决当时的苦恼，那么每天学那些微分方程又是为了什么？还去为了父母的微笑，人们的赞许吗？年年得奖学金的清华毕业生是了这么一个怪物：不知道自己要什么，也不知道生活是什么，对社会毫无接触，二十出头，可是见女孩子就一身不自在，会解各式各样的方程，却不能解决自己的困惑，硕士博士的路就在眼前，可是不知道还应不应该这样走下去，这状态难道就是我的追求？一个智商还不错的人努力多年就变成这样？</p>
<p>这是一个问题，很早就有了，只不过太晚地暴露出来，我相信这样的问题依然将被很多师弟师妹们面临，我相信在清华依旧有很多像我当年一样的学生。当看到他们天真的讨论： G 2<em><strong>, 托 6</strong>，GPA 3.</em>, 学校名次Top **, 仿佛几年的辛劳就只为那么点数字，人生的终极标就是goabroad. 我无法不为他们忧虑。这也是促使我写这篇文章的主要原因。</p>
<p>很多人没有对做研究的真正兴趣，但是用尽了精力去获得一个去国外做科学研究的机会，就洋溢在掩饰不住的喜悦里，甚至对人生毫无真正规划，对自己的兴趣一无所知，为出国而出国，那将在告别父老乡亲后去迎接苦闷的开端。</p>
<p>香港的学生很实际，决大多数本科毕业就去赚钱，三十之间为结婚买房奋斗，如果告诉一个香港人说你二十八了还在读博士，他会觉得你很失败，可能是根本不会赚钱。而留下来读博士的香港学生，就是真的很喜欢作研究的人，扎实地做事，他们的认真让我们一批朝三暮四，心猿意马的大陆学生汗颜。</p>
<h3 id="生活在香港"><a href="#生活在香港" class="headerlink" title="生活在香港"></a>生活在香港</h3><p>都说香港是弹丸之地，其实一千多平方公里的面积也不算小，不过大多是山，可利用的地方不多，很多商业区都是添海造出来的。亚热带的气候，又在到处是山和海湾的地方，风景当然好。香港的气候比北京舒适一万倍，冬天冷不了，夏天也不太热，甚至没有明显的四季感。只是上半年天气有些潮。成天都有湿湿的感觉，北方人有点受不了。</p>
<p>香港的交通极其发达，公共车从不拥挤，也很少堵车，可是香港的道路比北京的窄得多，车也不会少，布局和管理更好而已，看来北京走向国际化还须努力。这里是名符其实的购物天堂，东西也不算贵，电器和服装可能比北京便宜，特别是国际名牌，由于没有关税，肯定要比大陆便宜。所以不必带很多衣服来，足够便宜了。但是服务业，比如吃饭，理发，涉及到员工劳动和地租的就要比大陆贵好几倍。可以随便往来深圳也是在香港的一大好处，一天可以轻松来回好几次，在香港读书的学生可一得到香港的临时身份证，加上护照上盖个章，就可以自由出入境了。</p>
<p>常有人问及香港的影视明星，可是到了香港就觉得那些人也只是打工仔，背后是更有影响力的老板，一旦老板不想捧了，明星就会很快消失，新人会取而代之。看到他们卖力地载歌载舞，其实也是生存需要，在商业社会里那是绝对的驱动力。</p>
<p>香港的金融和资讯服务相当发达，在所谓第一世界里也算相当突出，可以很便宜的享受到信用卡，电讯，互联网服务，因此有些人在香港呆久了再回来反而不适应了，主要就是这些方面，当然还有其他制度等软件原因。</p>
<p>说到学校的生活，物质条件比国内任何大学好，甚至条件好过美国不少学校，香港的学生很少住宿学校，所以一到周末放假学校就很冷清。通常大陆学生独享学校设备，偌大电脑房和运动场，舒服的游泳池，都有不少美好回忆。学生宿舍条件不错，可以做饭，自己做比在餐厅里吃来的便宜，所以大陆学生会乐此不疲，周末常三五成群，做吃的为乐。餐厅里中西餐都有，中餐以广东口味为主，忙起来时以营养为重，口味不对也只能将就吃了。</p>
<p>现在在香港的大陆学生不算多，总共有四五百人，各个学校都有学生联谊会，是比较松散的组织，也有一些机会认识朋友。周末会组织放放电影，搞舞会。临近考试或论文时，谁也没心思搞活动。香港的学生很好打交道，在成熟的社会里长大的人，心理相对简单且好玩，不像一些大陆学生常常过分盘算自己的明天，将自己逼的很累。他们对大陆也渐渐感兴趣，虽然他们常常不知道湖南和四川，只说得上秦始皇和毛泽东。只要主动点和他们交流，是可以结识不少朋友的，粤语不是障碍，很多人可以听普通话，而且，广东话不难学，不留神就长进不少。</p>
<h3 id="关于工作机会"><a href="#关于工作机会" class="headerlink" title="关于工作机会"></a>关于工作机会</h3><p>很多人就终于跳到北美去了，大多还是接着读书，从这个意义上讲，香港只是跳板。</p>
<p>在香港留下工作的机会不多，如果在进香港的第一天了解这一点，是有好处的。也有回祖国的，我就是，所以我在这里写文章了，看到很多朋友询问去香港读书的问题，作为过来人，就写了这些，如果能给这些朋友提供一点有益的信息，就很满足了。</p>
<p>上次写了文章发表在海外学子版，很多朋友给我回信，给了我很大的鼓励，真的没想到过自己的东西会给别人带来影响。留学的经历给了我很多，几乎是一个脱胎换骨的过程，在一篇文章里是不可能都讲完的，所以我再写一个续集，好莱坞搞续集纯是为赚钱，我呢是什么都不图，万一有ppmm看了之后找我，最爽不过。将心底里的一点点“龌龊” 都暴露出来，可以痛快讲了。</p>
<h3 id="凡事都是虚空"><a href="#凡事都是虚空" class="headerlink" title="凡事都是虚空"></a>凡事都是虚空</h3><p>来自发展中国家的人，难免在神情上都多一丝生存紧张，中国在海外的留学生尤其让人感觉到这一点。看不到出自内心的笑，连谈话时也似乎只有一个主题：今后有什么打算？每做一件事，都在问自己：对我有没有好处？</p>
<p>坦白的说我自己刚到香港时就是这样，只觉得自己多么没着落，无根无底的飘在他乡，我要努力啊，绝不可浪费自己的任何精力，房子，车子，名誉，地位，还有漂亮老婆，我什么都要啊。要学最能给我带来利益的东西，去做最有利自己的事情，直到我成功。当时我就是这么典型功利，到现在我都想这样痛骂自己。</p>
<p>数学指出函数的极大值往往在最不稳定的点取到，人追求极端就会失去内心的平衡，到时候就不难体会到数学原理的深刻。我很快让我的功利心理逼到无路可走了，对所学的东西怀疑，担心自己变成书呆子，对自己有信心，找不到真正的朋友，找不到让身心平静的乐趣，每天都在心潮起伏。</p>
<p>最后我去找学生辅导员。愚蠢的诉说倒不多提了，不过我记得他大胡子的脸有了微笑，眼睛里放出宽容而温和的光。他告诉我觉的我很有意思，他第一次遇到这么坦白的学生。“那些东西有什么意义呢，你怀疑得很好。“之后就翻出圣经来，给我读某些章。</p>
<p>Everything is meaningless. 竟是圣经里的话语。那是我看到的最为震惊的一句话，也是我后来觉得最深刻的一句话。中国人很难理解，对在功利教育里熏陶过来，缺少人格教育的中国学生，更无异于晴天霹雳。成绩，offer, 学位，这样那样的好处，每天拼命算计的东西有什么意义？假设你突然死掉，世界将会怎样？世界将一样绚丽，地球转的一样快，太阳系每天在宇宙中换一个位置。大海还是大海，波涛还是波涛，一样的花开花落，潮起潮落。你的亲人可能会掉眼泪，但是周围的人在三个月内将你忘个干净，那是你曾经那么在乎他们怎么看你的一群人啊。如果上帝存在，在他的眼里，你是多么可怜的小虫子，在活着的短暂岁月里，在最美好的青春里，都不曾快乐过，用尽心力去聚集一大堆外在和心灵没有关系的小东西，只是出于对未来的没有信心，小小的心灵在接近熄灭的一天还在发出那个愚蠢的声音，让你忙碌，让你忧虑的声音：我要，我还要。天底下充满了这样的小虫子，当一个离开了，又有一个来了，做着同样的事情，汹涌着同样的小小念头，受着同样的煎熬。于是上帝要感慨了：虚空的虚空，凡事都是虚空。已有的事，后必再有；已行的事，后必再行。日光之下，并无新事。</p>
<p>已过的世代，无人纪念；将来的世代，后来的人也不纪念。——圣经·旧约·传道书</p>
<p>我不是在传教，当时的辅导员也不是在传教，但是让我立刻看到自身的渺小，物质追求的虚妄，内心的愚昧。看看资本主义的学生辅导，是不是比我们这边高明多了？马哲曾帮助过我们什么？</p>
<h3 id="不要忧虑"><a href="#不要忧虑" class="headerlink" title="不要忧虑"></a>不要忧虑</h3><p>“不要为明天忧虑，天上的飞鸟，不耕种也不收获，上天尚且要养活它，田野里的百合花，从不忧虑它能不能开花，是不是可以开得和其它一样美，但是它就自然的开花了，开得比所罗门皇冠上的珍珠还美。你呢，忧虑什么呢？人比飞鸟和百合花贵重多了，上帝会弃你不顾吗？”</p>
<p>一个朋友告诉我，他在等美国 offer 的时候，常常梦到接到牛校offer, 过度兴奋到醒，更为郁郁，感慨“但愿长醉不复醒”。这样的故事大家听了不会太惊诧，由此不难理解《儒林外史》中的进中举了。而得到offer的人到了海外，往往要经历更多的梦醒时分。</p>
<p>为什么活得这么累？生命本是如此美丽，连飞鸟和野花都可以尽情地享受上天的恩赐，而这些有高等思维的聪明人，却活活让思维搞得神情郁郁，哀声叹气。</p>
<p>常有人感叹西方人笑起来那么真实，那么出自内心，探讨起来，又归结到他们更有钱，他们的社会更发达。可我觉得那不是原因。原因就是他们比中国学生更接近飞鸟和野花罢了，更接近《阿甘正传》里的弱智罢了。他们更天真，相信那个万能的上帝会永不遗弃他，所以他们可以少想很多的问题，反而过得更顺利，在团队里表现得更凝聚，因为过分的私心是无法向大家共同的上帝交代的，他们可以很快做出一个Microsoft，一个Dell，但是大家可以看看中国的北大方正，联想，新浪，管理层一年的地震比台湾还多, 这么多年来，连冲出亚洲的野心都没有真正实现过。 这难道不是上帝给西方人带来的好处，耶稣说信我就可以得救，不管这个上帝是不是虚拟的，但他在事实上填补了人性的巨大空白，人家的Microsoft就证明了他的存在，正如计算机的虚拟内存，尽管虚拟，但事实上的作用是巨大的。中国学生总是怀疑这个看不见的上帝是否存在，更在私下里说，他对我能带来好处吗？其实中国人什么都不信，只信好处，从古时的考八股起，读书就是为了好处。因此，大家每天活在害怕没有好处的忧郁里，想靠自己小小的思维，在着巨大的世界系统里去谋取好处，上帝忍了泪水，背过脸去。</p>
<h3 id="思维的无奈"><a href="#思维的无奈" class="headerlink" title="思维的无奈"></a>思维的无奈</h3><p>我并不主张虚无，尽管我在上一篇文章里尽力去指出物质追求的虚妄。正如萨特认为，人生本是本无意义，但是怎样摆脱虚无却是有意义的。王朔的意义在于砸碎那些没有意义的假崇高，伍迪.艾伦的意义就在于不断指出人生的荒谬。如果一切都是那么可笑，我们怎样面对每天的24小时？但是活着就是这么简单，它只是一个过程，简单而自然地发生，以至于任何干扰和关注都是多余。就像飞鸟掠过天空，野花静静地开放。能把什么东西叫做现在吗？你能占有什么东西吗？一切的意义只在时间的流动的河中。就像一团火，哪个燃烧的过程才叫火，一旦过程停止了，火不存在了。人的思维在作怪，它是一个双面的东西，它不总是带给我们好处，虽然我们对它有那么多自信。</p>
<p>思维在很多时候严重地干扰了那个自然的生命过程，它在想单个的状态好不好，值不值得，合不合规范，能给自己带来什么，所以我们很快变得不快乐，不安稳，再也无法享受那种自然的喜悦了，正像被摄像的人，他的表情立刻不自然起来。恐怖片里的鬼魂可能一直不曾出现，人们却开始牙齿打颤，是被自己思维折磨而已。学计算机的朋友肯定知道操作系统将一个进程悬挂起来的意思。人的那个蠢笨不堪的思维，凭什么要常驻内存？它那么长期的运转，又真正解决了多少问题？为什么不在必要的时候悬挂它，去享受生命的自然？明白这一点将改变你的生活，思维会使你陷入矛盾，很多时候它是多余的，用心去体会，甚至用毛孔去感受就足够了。当你不再判断，不再分辨，不再比较，不再权衡，你就立刻、和谐起来。“采菊东篱下，悠然见南山”。那时，还用考虑什么呢？“此间有真意，欲辩已忘言”，连言语都是多余，因为言语来自思维。佛陀的捻花一笑，详和的神情，虽静坐，似乎已飞跃世间一切，他坐在了那个生命的根本之上, 再也没有一丝的不和谐。</p>
<p>读书的时候，我常常到海边听涛声，坐下来看着太阳落下，那会是我一天最美好的时间，当太阳没下去，晚霞渐渐褪去颜色，波浪依然轻轻拍打岸边，幕色从四周将我围过来，静默中我会在心灵里升起喜悦，感觉到冥冥中那个永恒的力量，它在紧紧将我抱住，天地万物和我一样同在，也被温和地抱着，我将永不孤独，永不伤心，永不绝望，因为那力量就一直在那里，将永远在那里，我是它的恩赐，我的灵魂从未像那时一样枝繁叶茂，内心从未像那时一样宁静和谐。</p>
<p>我不用去分辨那种力量，是上帝也好，上天也好，老子说的道也好，有什么关系呢？分辨只是是思维常干的蠢事罢了。所有的心灵都是一样的，所以我相信所有人都有那个和谐的状态，就像收音机有那个频道一样，只不过太多人没有调到过。太阳，大海，清风明月，鸟语花香，生生不息的物种，是多么大的恩赐啊，只在我们断暂的生命里才可以感受到，可是太多的人从不念及。他们将自己全部地交给了少得可怜的脑细胞，心灵交给了那个拙劣的 CPU,时时刻刻在做狭窄不堪的运算和判断，所以才会长时间挣扎焦虑，只看到85分和90分的区别，5000元月薪和10万年薪的不同，牛校和烂校的分辨。所以“郁闷”，“无耻”，“倒霉”，“不爽”，“急”，这样的词汇就开始在嘴边泛滥了，就像破电脑的出错提示一样多。</p>
<p>本没有打算再写很多了，关于人生的刨根问底本来就是沉重的课题，无异让学业繁多的学子们再怀疑自己，平添忧虑。倒不如多说点逗乐的事，每天多嘻嘻哈哈一阵。</p>
<p>前不久见到北大的一个女生，说我前面介绍香港的文字很实用，后面的文章就越来越看不懂了，可以理解，并不是所有的人都要像我一样想这些问题的，特别是女孩，一天多说几声“挺好的”“好温馨哟”就算过得不错了，古今中外都不曾出过一个女哲学家。但是，这位未曾谋面的北大师弟在等我的续集，谢谢你，xmdl(阿扁鱼）, 我不愿让你失望这一篇是为你而写的。</p>
<p>我们看的人文书前面提到的女生就问我，在留学过程中最大的收获是什么，我回答是长了见识。就像在小地方呆久的人出来见了大海，这个收获大得很。所以我渐渐地学会了真正的谦虚态度，越来越承认自己所可以理解到的，可以认识到的只是这世界的太小一部分。在我的脑力范围外有太大的空间，从这一点来看，我们每个人都对自己有过多的自负，每天都在或多或少的干着作井观天的蠢事，争论着盲人摸象的争论。</p>
<p>清华北大的学生的人文素养，我想，很多来源于图书馆的人文书籍，因为喜欢读书的学生多半在那里搬书回来看。可是那些书多产于七十，八十年代，基本上是被一把姓马的刀阉割了的太监式的书，我不怕得罪人。怎么阉割法？举个例子，“总体而言，宗教是唯心的，错误的世界观，被统治阶级利用来麻痹被统治阶级的广大人民…”从此，你知道了这一点，你么读释迦，读耶稣，读老庄，都觉得如同太监一般阴阳怪气。</p>
<p>在红色的年代里，马刀所向无敌，包括孔夫子到孙中山，从曾国藩到蒋介石，都少有可以逃脱的，因为他们有“阶级局限性”。</p>
<p>但是我到了香港，就看到了很多台湾的书，很多香港的书，原来这些书本不象太监的，甚至不比姓马的书少阳刚之气，可以读得让人忘食，哎，可怜它们的被阉。这些都是我以前脑子以外的东西，所以我立刻知道要谦虚了，人总是受着他的经历和环境的巨大局限，他甚至不意思到，没有选择地被限制隔离着。</p>
<p>耶稣呢，用我们的眼光看，他太失败了，没有妻子，没有儿子，没有房子，没有财产，没有地位，最后还要被钉死，他只是游走于四方去救助受苦受难的人们，他有余的眼光总是看到了世界的外面，因为他也到过更高的维度里。</p>
<p>庄子至今看来还是活得最浪漫最洒脱的中国人，他是超脱的同义词，他也是高维空间的蚂蚁。</p>
<p>去读他们，去体会那种来自另外一个维度的智慧的震撼，尽管你可能无法改变无奈的现实，但是可以深刻地改变自己，尽管无法摆脱沉重的肉身，依旧无选择地活在平面上，但是，心灵获得了自由。愿意升起你的心灵吗？</p>
<p>每个人都是独一无二的，而且我们永远只能是自己，卢梭说的，对于整个世界我微不足道，但是我对于自己确是全部。事实上我们只对于自己重要，如果我死掉了，没有几个人会在三年后保持对我的记忆，如果我痛苦，没有几个人会有真正的同情，因为太难了，每个人都无法了解我的意识。所以我们要独立，活着就是成为自己，那个独一无二的自己，去寻找自内在的完美与和谐，去实现句那没有选择的话： I am who I am。</p>
<p>Simply because I am not and can not beanyoneelse.可是我们受教育，教育的目的就是教我们忘掉自己，去变成一个称为标准的人，不是这样吗？从小学起我们就要评三好，树标兵，学雷锋，学赖宁。老师总是看到我们的恶习，“你那样子不合行为规范，不可耻吗？”</p>
<p>到了大学，我们又自由了多少呢？我们依旧看别人，看典型，看所谓成功者，我们依旧活在要忘掉自己的标准包围中，去bbs看看，似乎所有人都统一了口吻，GRE 2400,拿了牛校offer, 签了著名外企，找到了ppmm,牛啊，羡慕啊，爽啊,历史走到了21世纪，北大和清华人只剩下一副面孔了，每年招了很多新生，最后就剩下了一个。</p>
<p>比较是有意义的吗？作为一个独一无二的存在，作为自己的全部主宰，为什么要什么都和人家比才可以找到意义？为什么当别人考G的时候，我也一定要考，为什么考不过2200就要郁闷？为什么billgates成功的时候，我也一定要学计算机？可是自己和别人是多么的不同，些不同难道可以在一些欲念的驱动下轻易的忽略？</p>
<p>崇拜是有意义的吗？明星是需要那样追捧的吗？中国的那支烂球队是需要那么多关注的吗？</p>
<p>当我们倾注希望的时候，他们借此赚到了更多的银子，活得更加嚣张，更加让我们失望，我们是在给富翁们献爱心，爱心那么多，为什么不献给需要爱心的更多的人们，为什么不献给自己，独一无二的自己？</p>
<p>当我们崇拜自己，热爱自己，追捧自己，关注自己，我们就都也是明星了。这样盲从将无法发生，起哄将无法发生，个人崇拜将无法发生。这个意义大的很，至少大跃进将不发生，文革将不发生，我们的经济有可能早三十年走上正轨，现在我们不需要拼命飞跃重洋，中央到地方的官员就不要象现在一样，在亿万人没有工作时还竭力吹嘘7%的GDP增长，就像阳痿的人，为了脸面，郑重地去声名：请看我浓密的胡须，年增长率7%。</p>
<hr>
<h2 id="一点个人感悟"><a href="#一点个人感悟" class="headerlink" title="一点个人感悟"></a>一点个人感悟</h2><p>不知道多少人可以耐心有共鸣的看完这个文章，但是看完后却激动的想向每个好朋友推荐。关于人生的追求、香港的开明及其他、大陆人被蒙蔽太久、海外学习生活的好处和收获、是否出国以及为了什么出国，好多好多曾经是我想过滴为之郁闷过滴，幸好有留美归来的老师点拨，有Joe的严厉“质问”，才让我度过了当初的挣扎和煎熬，如今的心境已经远离那种浮躁和焦灼了。因为学会欣赏不同的美，懂得珍惜和付出，因此每一天都很开心。这一篇文章真的是让我看到绚烂浮躁下面自己真正缺少什么，好好珍藏！有机会还是要出去看看好好体会。</p>
<p><a href="https://500px.com/photo/84705421/roots-by-guy-cohen?from=user" target="_blank" rel="external">图片来源: 500px.com</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原文题为《一个清华学生留学香港后对人生的思考》，来源微信公众号。原文出处已经找不到。篇幅较长，个人感性的文字很多（很符合本博客的基调）。很多想法和思考需要自己结合自己的生活和经历去好好消化。多接受自己真实的感情流露。刚好闲逛的途中接触到这个博客：&lt;a href=&quot;http://www.stevepavlina.com/blog/&quot;&gt;StevePavlina.com&lt;/a&gt;。关注个人成长的一个有趣的个人博客（貌似知名度和访问量都挺不错。但为毛我现在才发现。可能真应了那句“找到自己，别人就会找到你”，这里的别人也泛指各种咨询。）纯分享文章。权当做个记录，以表示我的博客还在维护。&lt;/p&gt;
    
    </summary>
    
    
      <category term="思考" scheme="http://zouzhi.net/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="思维模式" scheme="http://zouzhi.net/tags/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="成长" scheme="http://zouzhi.net/tags/%E6%88%90%E9%95%BF/"/>
    
      <category term="教育" scheme="http://zouzhi.net/tags/%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
  <entry>
    <title>VPS迁移日志</title>
    <link href="http://zouzhi.net/posts/programming/2015-08-13-VPS%E8%BF%81%E7%A7%BB%E6%97%A5%E5%BF%97.html"/>
    <id>http://zouzhi.net/posts/programming/2015-08-13-VPS迁移日志.html</id>
    <published>2015-08-13T17:52:07.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>个人的手头在管理的一系列站点,由于之前野心勃勃的想着能整出多大一动静,处于完美主义的通病,出于未雨绸缪,提前搞了个Linode_2048配置的VPS来作为站点硬件架构.在沉下心来观察自己实力与现实的差距,很多是不是光靠想法和三两个好友就可以推进下去的. 在离职,组建团队折腾了几个月,烧掉一些资金后幡然醒悟.其实很多时候确实是自己不知天高地厚.沉下心来,朋友各自重新觅职的觅职,上班的上班,打酱油的接着打酱油.一返如常.零零碎碎的扯了一堆. 重点是要交代下此次迁移的背景条件.</p>
<a id="more"></a>
<p>原本放弃Linode之后,准备直接就用SAE来作为已有站点应用的临时落脚地. 不过思来想去还是难免太不自由. 正好赶上DigitalOcean搞活动,最低配的VPS(512M,20G SSD存储,2T流量)用来假设个站点也算是绰绰有余了.主要是价格便宜($5的月租,前两个月免单).那就先用着吧.</p>
<p>接下来就是一些列的迁移相关工作.</p>
<p>DO的VPS还是同样采用的Linode的相同linux版本,CentOS 6.5 x86 32位.建立droplet的过程很方便和快捷.就不做过多介绍了</p>
<h2 id="VPS-迁移"><a href="#VPS-迁移" class="headerlink" title="VPS 迁移"></a>VPS 迁移</h2><h3 id="1-基础web环境搭建-LAMP"><a href="#1-基础web环境搭建-LAMP" class="headerlink" title="1. 基础web环境搭建(LAMP)"></a>1. 基础web环境搭建(LAMP)</h3><p>这里可以直接参照DO的官方指导[How To Install Linux, Apache, MySQL, PHP (LAMP) stack On CentOS 6</p>
<p>](<a href="https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-centos-6" target="_blank" rel="external">https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-centos-6),相信可以轻松而愉快的搞定</a>,相信可以轻松而愉快的搞定)</p>
<h3 id="2-文件迁移"><a href="#2-文件迁移" class="headerlink" title="2. 文件迁移"></a>2. 文件迁移</h3><p>文件迁移最便捷的办法就是采用rsync来同步了.方便快捷.而且VPS间带宽充足.同步基本按秒记.这也就是VPS的好处.(如果是买的虚拟空间的话, 单文件同步,估计整个人都会不好了).</p>
<p>CentOS采用yum安装rsync,so easy:</p>
<pre><code>sudo yum install rsync
</code></pre><p>安装好了rsync之后,只需为相关的项目配置好vhost以及对应目录.然后在源VPS(linode VPS上)采用rsync命令:</p>
<pre><code>rsync -avz *source_dir* *USER*@*DO_VPS_Host*:*target_dir*
</code></pre><p>回车,刷刷的屏幕滚动,整个世界都安静了!如上把各个项目代码按照此步骤分别完成同步.</p>
<h3 id="3-数据库迁移"><a href="#3-数据库迁移" class="headerlink" title="3. 数据库迁移"></a>3. 数据库迁移</h3><p>mysql的迁移主要是迁出相关的项目数据库,已经对应的用户及授权.</p>
<p>主要分为两部:</p>
<p>a. 采用mysqldump将各个数据库分别导出到sql文件,然后rsync同步</p>
<pre><code>mysqldump -u*mysql_admin* -p*mysql_passwd* *db_name* &amp;gt; *target_sql_file_name*
</code></pre><p>b. 将用户及授权导出在新VPS的mysql中完成导入.这里原本想直接按照上面操作导出mysql库,在导入即可.考虑到新mysql中存在例如日志记录的库表冲突问题.参照<a href="http://geroldm.com/2012/10/migrate-mysql-databases-users-and-privileges-to-different-server/" target="_blank" rel="external">Migrate MySQL Databases, Users, and Privileges to Different Server</a>. 中规中矩的完成了用户及权限的迁移.</p>
<p>至此mysql的迁移就做完了.好像很简单.</p>
<h3 id="4-相关配置"><a href="#4-相关配置" class="headerlink" title="4. 相关配置"></a>4. 相关配置</h3><p>考虑到VPS上有好几个项目,而且有好几个人分别分管不同的项目.因此在配置各个应用时特意留了个心眼. 将项目同一安置在/www/web目录下.</p>
<p>为每一个项目开设一个ftp帐号,ftp采用TLS认证确保安全(关于FTP的安装和配置参见DO的教程:<a href="https://www.digitalocean.com/community/tutorials/how-to-configure-vsftpd-to-use-ssl-tls-on-a-centos-vps" target="_blank" rel="external">How To Configure vsftpd to Use SSL/TLS on a CentOS VPS</a>).</p>
<p>ftp帐号的home目录为对应项目目录.这样不同的参与者管理各自的项目就不会混乱了.同时这里要提醒的一点是关于创建ftp帐号时,考虑到安全性,应该讲账户类型设置为ssh不可登录,只能采用基于FTP的TLS来进行文件传输.相关创建账户命令:</p>
<pre><code>useradd -d /www/web/*ftp_username* -s /sbin/nologin *ftp_username*
passwd *ftp_username*
</code></pre><p>如上便可以创建一个不可直接登录,但能进行ftp访问的用户.so good!!</p>
<p>一切迁移完毕,接下来就进行一些相关的web配置,如vhost配置,.htaccess配置,防盗链配置,缺失模块安装等等.本地绑定IP进行测试,问题逐一排除,确认无误后,dnspod重置解析. 一切都是那么的方便和简单.大赞dnspod提供的免费DNS解析服务和七牛云存储提供的免费CDN服务.开发者的大爱.</p>
<p>OK,基本上也就这些了,有看不懂或不明白的直接留言或者邮件吧.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个人的手头在管理的一系列站点,由于之前野心勃勃的想着能整出多大一动静,处于完美主义的通病,出于未雨绸缪,提前搞了个Linode_2048配置的VPS来作为站点硬件架构.在沉下心来观察自己实力与现实的差距,很多是不是光靠想法和三两个好友就可以推进下去的. 在离职,组建团队折腾了几个月,烧掉一些资金后幡然醒悟.其实很多时候确实是自己不知天高地厚.沉下心来,朋友各自重新觅职的觅职,上班的上班,打酱油的接着打酱油.一返如常.零零碎碎的扯了一堆. 重点是要交代下此次迁移的背景条件.&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://zouzhi.net/categories/programming/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在terminal中打开sublime text2 ?</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-13-%E5%A6%82%E4%BD%95%E5%9C%A8terminal%E4%B8%AD%E6%89%93%E5%BC%80sublime-text2.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-13-如何在terminal中打开sublime-text2.html</id>
    <published>2015-08-13T17:44:38.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>Mac的话：</p>
<pre><code>ln -s &apos;/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl&apos; /usr/local/bin/sublime
</code></pre><p>或者用<code>alias</code>也可以：</p>
<pre><code>alias sublime=&apos;open -a &quot;Sublime Text 2&quot;&apos;
</code></pre><p>推荐第二种,打开时命令行不会有其他警告输出</p>
<p>来源:<a href="https://ruby-china.org/topics/1033" target="_blank" rel="external">Ruby China</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Mac的话：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ln -s &amp;apos;/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl&amp;apos; /usr/local/bin/sublime
&lt;/code&gt;&lt;/
    
    </summary>
    
    
      <category term="sublime" scheme="http://zouzhi.net/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>The Magic Travel That A File From Amazon AWS To China LAN</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-13-The-Magic-Travel-That-A-File-From-Amazon-AWS-To-China-LAN.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-13-The-Magic-Travel-That-A-File-From-Amazon-AWS-To-China-LAN.html</id>
    <published>2015-08-13T17:22:56.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>Do you know anything about the ‘China LAN’? If don’t,Just open your browser and download something from <a href="http://aws.amazon.com" target="_blank" rel="external">amazon aws</a>.</p>
<a id="more"></a>
<p>‘What a F**k’, I just want to say!</p>
<p>The following chapter is about my experience download a template(bought from <a href="http://themeforest.net/item/metronic-responsive-admin-dashboard-template/4021469" target="_blank" rel="external">ThemeForest</a>) that hosted on AWS.(PS: I’m just a Netizen from china LAN)</p>
<h2 id="How-to-climb-out-GFW"><a href="#How-to-climb-out-GFW" class="headerlink" title="How to climb out GFW"></a>How to climb out GFW</h2><h3 id="Part-I"><a href="#Part-I" class="headerlink" title="Part I:"></a>Part I:</h3><p>I log in ThemeForest,and goto the download tab. After click the download link, The download be guided to aws,the link like this:</p>
<p><a href="https://s3.amazonaws.com/marketplace-downloads.envato.com/files/126941645/metronic_v3.7.zip?AWSAccessKeyId=AKIAJYG5ROGJ6X7Z3M6Q&amp;Expires=1429197496&amp;Signature=2pq1Z1VUGoLNnvWG4qbPBgpypvo%3D&amp;response-content-disposition=attachment%3B%20filename%3Dthemeforest-4021469-metronic-responsive-admin-dashboard-template.zip" target="_blank" rel="external"><code>https://s3.amazonaws.com/marketplace-downloads.envato.com/files/126941645/metronic_v3.7.zip?AWSAccessKeyId=AKIAJYG5ROGJ6X7Z3M6Q&amp;amp;amp;Expires=1429197496&amp;amp;amp;Signature=2pq1Z1VUGoLNnvWG4qbPBgpypvo%3D&amp;amp;amp;response-content-disposition=attachment%3B+filename%3Dthemeforest-4021469-metronic-responsive-admin-dashboard-template.zip</code></a></p>
<p>From the url,there are some key argument for the resource access control.If you don’t have any agent,eg: <code>goagent</code>,<code>openvpn</code>,<code>shadowsocks</code>. Maybe what the result that browser give to you is just ‘Ops,The link is error……..’ or whatever. It is caused by the powerful GFW in China LAN.</p>
<p>Fortunately! I have my <code>Shadowsocks</code> server founded by <code>SUZHOU GDG</code> and VPS bought from DigitalOcean.The download link redirect normally,and the file is download begin. But the speed is 0~5kb/s…. And the file size is 300MB!</p>
<h3 id="Part-II"><a href="#Part-II" class="headerlink" title="Part II:"></a>Part II:</h3><p>I can’t endure the long long waiting.I logon in my vps and got the file by</p>
<pre><code>$ wget **the download link with sign and access key**
</code></pre><p>Wow! the speed is almost 3Mb/s. I got my file less than 1 min. But I must download the file to my local disk.Not the vps. So I try to use the lszrz tool of linux to got it.</p>
<pre><code>$ sz metronic_v3.7.zip
</code></pre><p>Unfortunately.The speed is limited. Orz! How can I get my treasure file.</p>
<h3 id="Part-III"><a href="#Part-III" class="headerlink" title="Part III:"></a>Part III:</h3><p>Maybe I can use the Cloud Disk Server service,such as: <code>BaiduYun</code>. Search from the google ‘VPS 百度云’. I got this <a href="https://github.com/oott123/bpcs_uploader" target="_blank" rel="external"><code>bpcs_uploader</code></a>.</p>
<p>Follow the README. I upload the file to my <code>Baidu Cloud Disk</code>.Then I download it from the cloud disk.(The upload speed is 125~200kb/s, and download speed from cloud disk is 3~5Mb/s.</p>
<h3 id="Part-IIII"><a href="#Part-IIII" class="headerlink" title="Part IIII:"></a>Part IIII:</h3><p>The travel of the file is so memorable and the experience is so meaningful. So I must try my best to write the procedure in English. (I think there are nobody will read to here)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Do you know anything about the ‘China LAN’? If don’t,Just open your browser and download something from &lt;a href=&quot;http://aws.amazon.com&quot;&gt;amazon aws&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>OS X 10.9 Mavericks 下如何显示隐藏文件</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-13-OS-X-10-9-Mavericks-%E4%B8%8B%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-13-OS-X-10-9-Mavericks-下如何显示隐藏文件.html</id>
    <published>2015-08-13T17:21:42.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>在MAC中,我们通常需要针对一些系统隐藏文件(通常以.开头文件名)进行查看和操作.同Win下,默认系统对这些文件是保护和隐藏的.在MAC OS X 10.9 Mavericks 中可以通过如下命令实现隐藏文件的显示与隐藏.</p>
<a id="more"></a>
<pre><code>defaults write com.apple.finder AppleShowAllFiles Yes &amp;&amp; killall Finder //显示隐藏文件
defaults write com.apple.finder AppleShowAllFiles No &amp;&amp; killall Finder //不显示隐藏文件
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在MAC中,我们通常需要针对一些系统隐藏文件(通常以.开头文件名)进行查看和操作.同Win下,默认系统对这些文件是保护和隐藏的.在MAC OS X 10.9 Mavericks 中可以通过如下命令实现隐藏文件的显示与隐藏.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mac批量重命名之MPlayerX顺序播放解决方案</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-13-mac%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D%E4%B9%8BMPlayerX%E9%A1%BA%E5%BA%8F%E6%92%AD%E6%94%BE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-13-mac批量重命名之MPlayerX顺序播放解决方案.html</id>
    <published>2015-08-13T17:20:49.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>这段日子以一个脱离程序员生活的角色存在着.告别了快节奏,嘈杂的工作环境和思绪混乱的个人状态,心情也平复了不少.算是培养点高雅的兴趣吧,其实就是让手不闲下来,让闲暇的时光稍有意义. 抄起哥们的吉他练了起来. 跟着大伟的教程学习发现吉他学习也不是那么遥不可及.其实兴趣确实是最好的老湿,互联网让学习变得不在那么依赖课堂的教学和空间的限制. 又扯远了….</p>
<p>其实本文主要是想交待和记录,在用Mac下的MplayerX观看 大伟吉他系列教程 时遇到MPlayerX不支持播放列表(playlist)的问题,但是MPlayerX默认支持同目录下顺序文件名播放的功能,通过修改文件名来实现系列教程的顺序播放.</p>
<a id="more"></a>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>Mac下的批量修改文件名其实有很多方法…</p>
<p>比如 纯手工模式 如果这你也能接受的话, Orz 我只能这样了</p>
<p>通过automator添加一个批量操作.具体的操作细节不再赘述.在这里不能满足我的要求.因为我的文件名规则中需要设计到一些<em>正则替换</em>(关于什么是<code>正则替换</code>请自行google)</p>
<p>最后还是不得不回到程序员的固有思维,用终端shell命令来实现.</p>
<h3 id="MAC-OS-NTFS-读写问题"><a href="#MAC-OS-NTFS-读写问题" class="headerlink" title="MAC OS NTFS 读写问题"></a>MAC OS NTFS 读写问题</h3><p>坑爹的事发生了.我的视频文件全部存放在移动硬盘(128G的Pro伤不起的说),而移动硬盘的分区格式采用NTFS,这在Mac下默认只支持读不支持写的.Orz,再次泪奔…</p>
<p>好吧,已经开始了,就不能让那钻牛角尖的劲停下来.最终找到了Mac下对NTFS格式U盘/移动硬盘读写的方案,安装Paragon NTFS for Mac OS X,官方下载链接[NTFS for Mac® OS X 11 中文版</p>
<p>]<a href="http://www.paragon-software.com/cn/home/ntfs-mac/" target="_blank" rel="external">1</a>,希望能支持正版.对于伤不起的用户,这里低调的发个链接好了<a href="http://docs.google.com/file/d/0B6JwEJUWTkcrMlVtTHlJYmpsZms/edit?pli=1" target="_blank" rel="external">要番羽土啬</a>.(对于不知到怎么番羽土啬的就不要问我了,自行想办法吧)</p>
<p>好了,通过上面的工具,移动硬盘读写的问题解决了.</p>
<h2 id="RENAME-批量改名"><a href="#RENAME-批量改名" class="headerlink" title="RENAME 批量改名"></a>RENAME 批量改名</h2><h3 id="安装-rename"><a href="#安装-rename" class="headerlink" title="安装 rename"></a>安装 rename</h3><p>接下来就是批量改名了.虽然通过find,sed可以轻松解决,但是通过知乎上不少知友给出的解决方案,个人认为Mac上rename绝对是个不可多得的好工具.Mac上使用rename,需要</p>
<pre><code>brew install rename
</code></pre><h3 id="去末尾数字"><a href="#去末尾数字" class="headerlink" title="去末尾数字"></a>去末尾数字</h3><p>然后我的视频文件名格式为:<img src="http://zozorz-typechoupload.stor.sinaapp.com/1992525744.png" alt="QQ20140902-1@2x.png"></p>
<p>首先,将末尾的’-数字’去掉</p>
<pre><code>rename &apos;s/(第[0-9]+课)(-[0-9]+).wmv/$1.wmv/&apos; *.wmv
</code></pre><p>稍微讲解下上面的命令意思:</p>
<p><code>s/..../../</code> 为rename命令的正则替换格式,其中第一个’/ /‘之间的为正则表达式,第二个’/ /‘之间的为要替换的内容.</p>
<p><code>[0-9]</code>表示 0到9的任何数字, <code>+</code> 表示前面的数字可以组合出现至少一个,比如1,01,09,900都可以,<code>()</code>之间的内容又可以看做一个子表达式.使用<code>()</code>的目的是为了后面的替换是可以直接拿到前面匹配出的内容. 比如通过运行上面的命令, 将 ‘第10课-10.wmv’ 替换成 ‘第10课.wmv’.其中第二个’/ /‘中的$1就表示第一个’/ /‘中匹配出的’第10课’.</p>
<h3 id="数字位数统一"><a href="#数字位数统一" class="headerlink" title="数字位数统一"></a>数字位数统一</h3><p>通过上面的操作去掉了不需要的’-数字’部分,要使得MplayerX正确读取顺序,需要注意’需要将 ‘第1课’ 改为’第01课’(这个跟MplayerX的默认排序规则有关).同理,用rename也很简单可以实现:</p>
<pre><code>rename &apos;s/第([1-9])课.wmv/第0$1课.wmv/&apos; *.wmv
</code></pre><p>Ok,通过上面的操作,再次回到视频目标目录,通过MPlayerX打开其中一个视频,然后点击播放下一个,顺利按照我们预期的顺序开始播放.Well done!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这段日子以一个脱离程序员生活的角色存在着.告别了快节奏,嘈杂的工作环境和思绪混乱的个人状态,心情也平复了不少.算是培养点高雅的兴趣吧,其实就是让手不闲下来,让闲暇的时光稍有意义. 抄起哥们的吉他练了起来. 跟着大伟的教程学习发现吉他学习也不是那么遥不可及.其实兴趣确实是最好的老湿,互联网让学习变得不在那么依赖课堂的教学和空间的限制. 又扯远了….&lt;/p&gt;
&lt;p&gt;其实本文主要是想交待和记录,在用Mac下的MplayerX观看 大伟吉他系列教程 时遇到MPlayerX不支持播放列表(playlist)的问题,但是MPlayerX默认支持同目录下顺序文件名播放的功能,通过修改文件名来实现系列教程的顺序播放.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to update the repo from the Fork Github</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-13-How-to-update-the-repo-from-the-Fork-Github.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-13-How-to-update-the-repo-from-the-Fork-Github.html</id>
    <published>2015-08-13T17:16:43.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>I can’t use Google engine that it search something more professional and targeted than Baidu because of the GFW (Great Firewall of China). The good news is the goagent is very good tool to help me walk out of the mud puddle.</p>
<a id="more"></a>
<p>I clone the repo from github. <a href="https://github.com/goagent/goagent" target="_blank" rel="external">https://github.com/goagent/goagent</a></p>
<p>It is so convenient, You just need the follow the guide: <a href="https://github.com/goagent/goagent/blob/wiki/InstallGuide.md" target="_blank" rel="external">https://github.com/goagent/goagent/blob/wiki/InstallGuide.md</a></p>
<p>What I want to introduce in this article as the title, so the detail about how to build and config the goagent will be ignore. What i wanted is when i fork the goagent repo to mine, and I clone the repo from my github repo. Then I change the <code>goagent/local/proxy.ini</code>. After some days, I want to update the repo from the fork origin.The following steps from <a href="http://stackoverflow.com/questions/15738604/update-the-fork-github" target="_blank" rel="external">stackoverflow.com</a> will help me.</p>
<pre><code># git remote add parentrepo &amp;lt;url&amp;gt;;
# git fetch parentrepo 
</code></pre><p>after update,you can push to your repo</p>
<pre><code># git push -u origin {branch_name}
</code></pre><p>that’s all!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I can’t use Google engine that it search something more professional and targeted than Baidu because of the GFW (Great Firewall of China). The good news is the goagent is very good tool to help me walk out of the mud puddle.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to Change PHP Version On AMPPS v2.5</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-13-How-to-Change-PHP-Version-On-AMPPS-v2-5.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-13-How-to-Change-PHP-Version-On-AMPPS-v2-5.html</id>
    <published>2015-08-13T17:16:08.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>After I install AMPPS(v2.5) on my Macbook Pro(2013),There is something confuse me. I can’t change the PHP version!</p>
<a id="more"></a>
<p>In the control Panel. <code>PHP</code>-&gt;<code>Change PHP Version</code>.There are only have <code>PHP 5.3</code> can choose. But what I want is PHP 5.6 for the use of php namespace. How can I do that?</p>
<p>The Almighty Google! I find this. <a href="http://www.softaculous.com/board/index.php?tid=5847&amp;tpg=all&amp;title=i%27m_using_Ampps_version_2.5_and_my_php_version_is_5.3_%3F%3F" title="i%27m_using_Ampps_version_2.5_and_my_php_version_is_5.3_%3F%3F" target="_blank" rel="external"><strong><em>I’m using Ampps version 2.5 and my php version is 5.3 ??</em></strong></a></p>
<blockquote>
<p>Hi,</p>
<p>Work around for Mac Users is to run Ampps from Terminal:</p>
</blockquote>
<p><code>The Code:</code></p>
<pre><code>user&gt; cd /Applications/AMPPS 

user&gt; ./Ampps.app/Contents/MacOS/Ampps
</code></pre><p>obviously! It is a bug with Ampps v2.5.But the best solution to solve my requirement is this.</p>
<p>By the way. When you follow the above to change the PHP version, Ampps will be crash when you open the app normally and change the PHP version by the panel.</p>
<p>Ok, I know you can’t understand what I am talking about above!! Yes, My English is poor!</p>
<p>Orz! Thank you for your reading to here ~~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;After I install AMPPS(v2.5) on my Macbook Pro(2013),There is something confuse me. I can’t change the PHP version!&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>让Defy再飞一会--假砖刷回记</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-13-%E8%AE%A9Defy%E5%86%8D%E9%A3%9E%E4%B8%80%E4%BC%9A-%E5%81%87%E7%A0%96%E5%88%B7%E5%9B%9E%E8%AE%B0.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-13-让Defy再飞一会-假砖刷回记.html</id>
    <published>2015-08-13T17:14:50.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>自从用上了apple系的产品后就一发不可收拾, 基本3件套已经全部尝试之后,蓦然回首发现.曾经默默陪伴自己度过无数个日夜的小D已经被冷落多时,遗弃在杂物框的角落,蒙上了一层记忆的尘土(情不自禁又开始大泛酸….).其实是要回家一趟,想起手头闲置的Defy也是一种浪费,二手处理估计还不如白菜价.索性拿回家给自己的弟弟妹妹折腾.小D遗弃时已经被老湿我尝试在其上刷过不计其数次各个版本适配不适配ROM.这可能也是小D至今留下的一段非常难忘而美好的回忆.再次拿出时,运行的是MIUI V5.对于1GHz,512M配置,V5根本无用武之地.作罢,实用性第一,考虑再三还是刷个MIUI 2.3 精简版.卡刷轻松搞定.可能是用了一段时间5s,即使是裁剪后的MIUI在小D上的流畅度也还是无法让人忍受.折腾再三,准备刷入CM,之后就更新,BootMenu,kernel.几经折腾,由开始的卡M,终于….变砖了!!!</p>
<a id="more"></a>
<p>故事到这里,估计有人该喊”兰(L)州(Z)烧(S)饼(B)”了,这所谓NO ZUO NO DIE获取就是这个道理.但是没办法,谁叫老湿就是个爱折腾的家伙,而且还是一个对于折腾有种那样的一份执著.这或许就是罗xx说的情怀.不就是变砖嘛,小D的强大在于勇于面对一切假砖,勇于”驱动,RSD,SBF”三步走迅速满血复活.</p>
<p>但是长时间的颠沛流离,身经百战之后此时的小D早以忘记当时的RSD刷入之后的BL已经升级几何了.隐约急得首次用小D步入MIUI家族时是通过联通(BL=6)底包刷入成功的.后面基本一路跟随MIUI的脚步从2.2到2.3,从MIUI V3以致到V5.虽然期间也相继跟CM,乐蛙,百度云,MoKee等各种ROM约会无数.但最后终究被MIUI洗脑式的用户体验拉回其家族,这或许也是后期走入果族的原始动因.好了,又说了一堆有的没的.</p>
<p>通过自己的预测,我选择BL=7的亚太底包(已ROOT版)刷入,杯具!陆续尝试其他几个底包(插一句,之前一直对BL没什么概念,这回直接拿BL7开刷,其实是作死的节奏,因为Moto的BL是只升不降的,就是说你刷入了BL=7底包,再刷如BL&lt;7的任何底包都会于事无补)其中包括BL=6的联通底包和亚太底包,纷纷阵亡.剩下小D黯然伤神地躺在那,一语不发… 折腾,有时一段无休止的折腾.杯具再次发生, 手机电池没电了!!! (千万头草泥马在心头奔走).这下真没辙了,当手机电池没电时,通过USB进行线刷时,由于不能供电,RSD无法识别到对应的设备.从而无法进行刷机!</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/685082891.png" alt="QQ20141002-1@2x.png"></p>
<p>下午跟几个朋友顶着全国人民欢聚魔都的压力完成了一次回家前的方言演习.逛罢,吃罢,侃罢,归来以值半夜.心中依旧割舍不下小D</p>
<p>小D此时的BL已被我毁,直充无法完成电池充电,估计不少人有该喊了,这回是”兰州真烧饼”了.去买个万能充?这个点貌似不太显示,明儿哥就颠了,这要是搞不定,回家了小D复活估计就彻底没戏了.得亏室友也是个工科男,估计在我的熏陶下,这成为了不折腾会死一族. 他首先建议自我DIY,用5号电池完成这轮小D复活前能量聚集.不过最后考虑电池无法提供足够的电量考虑下放弃此方案</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/2102343518.jpg" alt="IMG_0970.jpg"></p>
<p>考虑再三,我们又尝试了,手机电池接线替代供电(室友废弃手机电池)</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/15025825.jpg" alt="IMG_0971.JPG"></p>
<p>由于电压不匹配和接线困难,再次失败.</p>
<p>最后老湿机智的突然想到我这不是还有个移动电源吗!! 这么好的额定电压电源居然忘了. 移动电源都是通过USB供电,捡了一个废弃USB鼠标,四根线各自功能分配.google之.</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/545876194.jpg" alt="IMG_0972.jpg"></p>
<blockquote>
<p>红线：电源正极       （接线上的标识为：+5V或VCC）</p>
<p>白线：负电压数据线（标识为：Data-或USB Port -）</p>
<p>绿线：正电压数据线（标识为：Data+或USB Port +）</p>
<p>黑线：接      地        （标识为：GROUND或GND）</p>
</blockquote>
<p>其中对应图中四线,通过测试,<strong>白线为电源供电+,蓝线为-</strong>. OK,接好线,连上充电宝.</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/57062642.jpg" alt="IMG_0973.JPG"></p>
<p>再次通过USB线将小D连上已经预装好驱动和RSD的PC.RSD顺利识别</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/1241950197.jpg" alt="2yumzhj.jpg"></p>
<p>这回通过MIUI论坛帖子<a href="http://www.miui.com/thread-843216-1-1.html" target="_blank" rel="external">解决新手砖头的问题~</a>,找到官方原版(非root版)底包,刷入,顺利恢复.</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/1317956344.jpg" alt="IMG_0974.jpg"></p>
<p>突然,发现原生的亚太底包在小D上非常流畅. 作罢,折腾了这么久,终于把砖刷回来了. root,删掉原生rom中无用应用,精简系统应用和优化开机启动,交差. 洗洗睡去.. ^_^</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从用上了apple系的产品后就一发不可收拾, 基本3件套已经全部尝试之后,蓦然回首发现.曾经默默陪伴自己度过无数个日夜的小D已经被冷落多时,遗弃在杂物框的角落,蒙上了一层记忆的尘土(情不自禁又开始大泛酸….).其实是要回家一趟,想起手头闲置的Defy也是一种浪费,二手处理估计还不如白菜价.索性拿回家给自己的弟弟妹妹折腾.小D遗弃时已经被老湿我尝试在其上刷过不计其数次各个版本适配不适配ROM.这可能也是小D至今留下的一段非常难忘而美好的回忆.再次拿出时,运行的是MIUI V5.对于1GHz,512M配置,V5根本无用武之地.作罢,实用性第一,考虑再三还是刷个MIUI 2.3 精简版.卡刷轻松搞定.可能是用了一段时间5s,即使是裁剪后的MIUI在小D上的流畅度也还是无法让人忍受.折腾再三,准备刷入CM,之后就更新,BootMenu,kernel.几经折腾,由开始的卡M,终于….变砖了!!!&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>写一本自己的线上电子书--gitbook体验记</title>
    <link href="http://zouzhi.net/posts/uncategorized/2015-08-13-%E5%86%99%E4%B8%80%E6%9C%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BA%BF%E4%B8%8A%E7%94%B5%E5%AD%90%E4%B9%A6-gitbook%E4%BD%93%E9%AA%8C%E8%AE%B0.html"/>
    <id>http://zouzhi.net/posts/uncategorized/2015-08-13-写一本自己的线上电子书-gitbook体验记.html</id>
    <published>2015-08-13T02:06:03.000Z</published>
    <updated>2016-11-12T19:38:49.935Z</updated>
    
    <content type="html"><![CDATA[<p>酝酿了很久,一直想通过自己的力量,将自己这一路走来的经历和感想汇集起来,其实算不上要写成一本书,只是希望将自己这些年的所思,所想,所得做一个小结.也算是给自己的一个交代.只希望自己的这段从校园到职场,再走出职场的时光能在今后的回望中仍能留下些印记来怀念罢了.</p>
<p>散文部分结束,下面是一个工科男针对上面的意图开展的一系列折腾经历.这个电子书成文的过程可能要分为好几个阶段和较长一段时间来完成.此文为开篇.也即是题中的后半部分gitbook体验记. 其实就是介绍一个超简介,能博得广大开发小伙伴喜欢的线上电子书平台,也是工具. 好了,进入正题.</p>
<a id="more"></a>
<p>gitbook官网:<a href="https://www.gitbook.io/" target="_blank" rel="external">https://www.gitbook.io/</a></p>
<p>注册神马的很简单,就不多说了(推荐用github帐号登录).</p>
<p>创建好帐号后,进入管理后台会要求你下载官网的一个客户端工具:<a href="https://www.gitbook.io/editor/download" target="_blank" rel="external">https://www.gitbook.io/editor/download</a>.</p>
<p>*注意:该链接会将下载目标导向Amazon AWS(亚马逊的云主机,在国内可能需要番羽土啬),链接类似:(<a href="https://s3.amazonaws.com/github-cloud/releases/18655678/9cec5b80-3a70-11e4-9dc8-815d88da4259.dmg?response-content-disposition=attachment;%20filename=gitbook-mac.dmg&amp;AWSAccessKeyId=AKIAISTNZFOVBIJMK3TQ&amp;Expires=1411291614&amp;Signature=CiK0QMyphEsDphyVon3aNod9Kn4=" target="_blank" rel="external">https://s3.amazonaws.com/github-cloud/releases/18655678/9cec5b80-3a70-11e4-9dc8-815d88da4259.dmg?response-content-disposition=attachment%3B%20filename%3Dgitbook-mac.dmg&amp;AWSAccessKeyId=AKIAISTNZFOVBIJMK3TQ&amp;Expires=1411291614&amp;Signature=CiK0QMyphEsDphyVon3aNod9Kn4%3D</a>)</p>
<p>前面的下载链接会判断当前请求客户端系统版本(win,linux,mac),然后跳转到对应版本客户端.并且是带有gitbook专属的访问密钥和签名的,也就是说你通过上面的连接是无法直接下载的.必须通过这个:<a href="https://www.gitbook.io/" target="_blank" rel="external">https://www.gitbook.io/</a>完成跳转. 考虑到部分童鞋对于番羽土啬等会出现的麻烦.特此记录下我自己遇到的问题以及解决办法.</p>
<p>直接通过链接跳转,被屏蔽! Orz.</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/572277827.png" alt="QQ20140921-1@2x.png"></p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/25836662.png" alt="QQ20140921-2@2x.png"></p>
<p>开启goagent, 通过代理进行下载.</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/2225234406.png" alt="QQ20140921-3@2x.png"></p>
<p>NO!!,Oops,再次Orz.</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/1564496995.png" alt="QQ20140921-4@2x.png"></p>
<p>下载一部分后没反应了,有时候goagent也是靠不住的.本来想着继续通过vpngate上的公共vpn再试试的.但是自己有<a href="https://www.digitalocean.com/?refcode=f32c6f23f408" target="_blank" rel="external">DigitalOcean</a>的VPS,那就算了.直接通过VPS来下载吧(本来是在VPS上架设有PPTP的vpn的.不过速度实在是对不起观众.放弃).</p>
<p>登录上VPS,直接通过上面的链接用wget进行下载:</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/3330346230.png" alt="QQ20140921-6@2x.png"></p>
<p>下载是OK,但是由于gitbook下载服务器会针对客户端类型(win,linux,mac)分别跳转到响应的版本.vps的OS是centos 6.5. 所以wget获取的客户端类型为linux版本.显然不是我要的mac版. 没办法,折腾到底. 为wget加一个http头设定吧.</p>
<pre><code>wget --header=&amp;amp;quot;Referer:https://www.gitbook.io/book/zoorz/how-to-be-a-web-developer&amp;amp;quot; --header=&amp;amp;quot;User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.122 Safari/537.36&amp;amp;quot; https://www.gitbook.io/editor/download
</code></pre><p>这回顺利获取到了mac版本的客户端,并顺利的完成了下载,然后通过ftp,或者sz(yum install lrzsz 进行工具安装)将文件同步到本地.VPS每月流量过多,而且文件不大.因此就这样干了.^_^.</p>
<p>有遇到上面下载链接获取不到客户端的小伙伴,我已经将当前最新版本(version 1.1.0)上传至网盘:<a href="http://pan.baidu.com/s/1hq5S0HA" target="_blank" rel="external">http://pan.baidu.com/s/1hq5S0HA</a></p>
<p>三个版本都已经下载好,小伙伴们自行选择吧.^_^.</p>
<p>好了,客户端安装文件获取到了,安装过程就so easy了.</p>
<p>MAC版安装好之后的界面.</p>
<p><img src="http://zozorz-typechoupload.stor.sinaapp.com/1360097587.png" alt="QQ20140921-7@2x.png"></p>
<p>好了,选择电子书类型后就开始享受文字之旅吧. 关于Gitbook editor的使用和最终的电子书同步和线上发布,这次的文字有点多了.下次再分享吧.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;酝酿了很久,一直想通过自己的力量,将自己这一路走来的经历和感想汇集起来,其实算不上要写成一本书,只是希望将自己这些年的所思,所想,所得做一个小结.也算是给自己的一个交代.只希望自己的这段从校园到职场,再走出职场的时光能在今后的回望中仍能留下些印记来怀念罢了.&lt;/p&gt;
&lt;p&gt;散文部分结束,下面是一个工科男针对上面的意图开展的一系列折腾经历.这个电子书成文的过程可能要分为好几个阶段和较长一段时间来完成.此文为开篇.也即是题中的后半部分gitbook体验记. 其实就是介绍一个超简介,能博得广大开发小伙伴喜欢的线上电子书平台,也是工具. 好了,进入正题.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
